<Controls:MetroWindow x:Class="MONI.Views.MainView"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                      xmlns:Controls="http://metro.mahapps.com/winfx/xaml/controls"
                      xmlns:dd="clr-namespace:GongSolutions.Wpf.DragDrop;assembly=GongSolutions.Wpf.DragDrop"
                      xmlns:data="clr-namespace:MONI.Data"
                      xmlns:viewModels="clr-namespace:MONI.ViewModels"
                      xmlns:views="clr-namespace:MONI.Views"
                      xmlns:valueConverter="clr-namespace:MONI.ValueConverter"
                      xmlns:attachedCommandBehavior="clr-namespace:AttachedCommandBehavior"
                      xmlns:componentModel="clr-namespace:System.ComponentModel;assembly=WindowsBase"
                      xmlns:util="clr-namespace:MONI.Util"
                      RenderOptions.ClearTypeHint="Enabled"
                      TextOptions.TextFormattingMode="Display"
                      Title="MONI"
                      Width="800"
                      MinWidth="700"
                      Height="700"
                      MinHeight="500"
                      PreviewKeyUp="mv_PreviewKeyUp"
                      x:Name="mv"
                      WindowPlacementSettings="{Binding ElementName=mv, Path=ViewModel.CustomWindowPlacementSettings, Mode=OneWay}"
                      SaveWindowPosition="True"
                      BorderThickness="1"
                      BorderBrush="#808080"
                      Loaded="MainView_OnLoaded"
                      Icon="/MONI;component/Resources/moni.ico">
  <Window.CommandBindings>
    <CommandBinding Command="Help"
                    CanExecute="HelpCanExecute"
                    Executed="HelpExecuted" />
  </Window.CommandBindings>

  <Window.Resources>
    <ResourceDictionary>
      <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/MONI;component/Views/ViewStyles.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MONI;component/Views/ViewTemplates.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MONI;component/Resources/Icons.xaml" />
      </ResourceDictionary.MergedDictionaries>

      <VisualBrush Stretch="Uniform"
                   x:Key="editIcon"
                   Visual="{StaticResource appbar_edit}" />
      <VisualBrush Stretch="Uniform"
                   x:Key="deleteIcon"
                   Visual="{StaticResource appbar_delete}" />
      <VisualBrush Stretch="Fill"
                   x:Key="upIcon"
                   Visual="{StaticResource appbar_chevron_up}" />
      <VisualBrush Stretch="Fill"
                   x:Key="downIcon"
                   Visual="{StaticResource appbar_chevron_down}" />

      <!-- our own colored appbar ribbon -->
      <Canvas Width="48"
              Height="48"
              Clip="F1 M 0,0L 48,0L 48,48L 0,48L 0,0"
              UseLayoutRounding="False"
              x:Key="appbar_ribbon">
        <Path Width="12"
              Height="24"
              Canvas.Left="18"
              Canvas.Top="12"
              Stretch="Fill"
              Fill="#B10101"
              Data="F1 M 18,36L 18,12L 30,12L 30,36L 24,30L 18,36 Z " />
      </Canvas>

      <VisualBrush Stretch="Fill"
                   x:Key="ribbonIcon"
                   Visual="{StaticResource appbar_ribbon}" />
    </ResourceDictionary>
  </Window.Resources>

  <Controls:MetroWindow.IconTemplate>
    <DataTemplate>
      <Grid Width="{TemplateBinding Width}"
            Height="{TemplateBinding Height}"
            Margin="4"
            Background="{DynamicResource IdealForegroundColorBrush}"
            RenderOptions.EdgeMode="Aliased"
            RenderOptions.BitmapScalingMode="HighQuality">
        <Grid.OpacityMask>
          <VisualBrush Stretch="Uniform">
            <VisualBrush.Visual>
              <Viewbox>
                  <Path Data="M27.01135,34.797C29.658478,34.797 31.806999,36.945377 31.806999,39.593949 31.806999,42.23962 29.658478,44.387998 27.01135,44.387998 26.184092,44.387998 25.405671,44.178195 24.726353,43.808978L24.68371,43.784446 15.832217,48.526999 14.663001,46.649397 22.339024,40.666025 22.31443,40.55954C22.250549,40.247596 22.217,39.924658 22.217,39.593949 22.217,36.945377 24.364122,34.797 27.01135,34.797z M27.01146,21.938999C17.262583,21.938999 9.3590002,29.844053 9.3589997,39.593998 9.3590002,49.341244 17.262583,57.244999 27.01146,57.244999 36.760237,57.244999 44.664,49.341244 44.664,39.593998 44.664,29.844053 36.760237,21.938999 27.01146,21.938999z M27.011558,15.183998C40.491858,15.183998 51.42,26.112107 51.42,39.593998 51.42,53.072886 40.491858,63.999998 27.011558,63.999998 13.531358,63.999998 2.6029997,53.072886 2.6029997,39.593998 2.6029997,26.112107 13.531358,15.183998 27.011558,15.183998z M6.0752745,12.689999L11.013999,17.614599 4.9399252,23.710999 0,18.7878z M48.017965,12.616999L54.092001,18.713409 49.153337,23.637999 43.078001,17.541489z M19.674001,0L34.568001,0 34.568001,8.645998 31.879,8.645998 31.879,12.712999 22.216999,12.712999 22.216999,8.645998 19.674001,8.645998z"
                        Stretch="Uniform"
                        Fill="Black"
                        Width="48"
                        Height="48"
                        Margin="0,0,0,0" />
              </Viewbox>
            </VisualBrush.Visual>
          </VisualBrush>
        </Grid.OpacityMask>
      </Grid>
    </DataTemplate>
  </Controls:MetroWindow.IconTemplate>

  <Controls:MetroWindow.TitleTemplate>
    <DataTemplate>
      <TextBlock Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Content, Converter={StaticResource ToUpperConverter}}"
                 TextTrimming="CharacterEllipsis"
                 VerticalAlignment="Center"
                 Margin="8 -1 0 0"
                 FontSize="{DynamicResource WindowTitleFontSize}"
                 FontFamily="{DynamicResource DefaultFont}" />
    </DataTemplate>
  </Controls:MetroWindow.TitleTemplate>

  <!-- *** window commands ***************************************************************** -->
  <Controls:MetroWindow.RightWindowCommands>
    <Controls:WindowCommands>
      <Button Click="ToMonlist_Button_Click"
              x:Name="OpenMonlist"
              ToolTip="Daten in Monlist importieren">
        <Rectangle Width="20"
                   Height="20"
                   Fill="{DynamicResource WhiteBrush}">
          <Rectangle.OpacityMask>
            <VisualBrush Stretch="UniformToFill"
                         Visual="{StaticResource appbar_cabinet_out}" />
          </Rectangle.OpacityMask>
        </Rectangle>
      </Button>
      <Button Click="GitHub_Button_Click"
              ToolTip="MONI bei GitHub">
        <Rectangle Width="20"
                   Height="20"
                   Fill="{DynamicResource WhiteBrush}">
          <Rectangle.OpacityMask>
            <VisualBrush Stretch="UniformToFill"
                         Visual="{StaticResource appbar_github}" />
          </Rectangle.OpacityMask>
        </Rectangle>
      </Button>
      <Button Click="ShowPNSearch_Button_Click"
              ToolTip="Projektnummern-Suche">
        <Rectangle Width="20"
                   Height="20"
                   Fill="{DynamicResource WhiteBrush}">
          <Rectangle.OpacityMask>
            <VisualBrush Stretch="Uniform"
                         Visual="{StaticResource appbar_page_search}" />
          </Rectangle.OpacityMask>
        </Rectangle>
      </Button>
      <Button Click="ShowPositionSearch_Button_Click"
              ToolTip="Positionsnummern-Suche">
        <Rectangle Width="20"
                   Height="20"
                   Fill="{DynamicResource WhiteBrush}">
          <Rectangle.OpacityMask>
            <VisualBrush Stretch="Uniform"
                         Visual="{StaticResource appbar_page_search}" />
          </Rectangle.OpacityMask>
        </Rectangle>
      </Button>
      <Button Click="EditPreferences_Button_Click"
              ToolTip="Einstellungen">
        <Rectangle Width="20"
                   Height="20"
                   Fill="{DynamicResource WhiteBrush}">
          <Rectangle.OpacityMask>
            <VisualBrush Stretch="UniformToFill"
                         Visual="{StaticResource appbar_settings}" />
          </Rectangle.OpacityMask>
        </Rectangle>
      </Button>
      <Button Content="?"
              FontSize="18"
              Command="Help" />
    </Controls:WindowCommands>
  </Controls:MetroWindow.RightWindowCommands>

  <!-- *** flyouts ***************************************************************** -->
  <Controls:MetroWindow.Flyouts>

    <Controls:FlyoutsControl>
      <!-- shortcut help -->
      <Controls:Flyout Header="Hilfe"
                       Width="700"
                       Position="Right"
                       KeyboardNavigation.TabNavigation="Cycle"
                       Content="{Binding ElementName=mv, Path=ViewModel}"
                       IsOpen="{Binding ElementName=mv, Path=ViewModel.ShowHelp}">
        <Controls:Flyout.ContentTemplate>
          <DataTemplate>
            <DataTemplate.Resources>
              <valueConverter:MarkdownToFlowDocumentConverter x:Key="MarkdownToFlowDocumentConverter" />
            </DataTemplate.Resources>
            <Grid Background="White" Margin="1,0,1,1">
              <FlowDocumentScrollViewer Margin="10" Foreground="Black"
                                        VerticalScrollBarVisibility="Auto"
                                        HorizontalScrollBarVisibility="Disabled"
                                        Document="{Binding Path=Help, Converter={StaticResource MarkdownToFlowDocumentConverter}}" />
            </Grid>
          </DataTemplate>
        </Controls:Flyout.ContentTemplate>
      </Controls:Flyout>

      <!-- settings -->
      <Controls:Flyout Header="Settings"
                       Width="500"
                       Position="Right"
                       KeyboardNavigation.TabNavigation="Cycle"
                       Content="{Binding ElementName=mv, Path=ViewModel.EditPreferences}"
                       IsOpen="{Binding ElementName=mv, Path=ViewModel.EditPreferences, Converter={x:Static valueConverter:Null2FalseConverter.Instance}}">
        <Controls:Flyout.ContentTemplate>
          <DataTemplate DataType="{x:Type data:MoniSettings}">
            <DataTemplate.Resources>
              <SolidColorBrush x:Key="ComboBoxMouseOverInnerBorderBrush">#4EA6EA</SolidColorBrush>
              <Style TargetType="{x:Type TextBox}"
                     BasedOn="{StaticResource MONIMetroFlyoutTextBox}" />
              <Style TargetType="{x:Type ComboBox}"
                     BasedOn="{StaticResource MONIMetroFlyoutComboBox}" />
            </DataTemplate.Resources>

            <Grid Margin="10">

              <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
              </Grid.RowDefinitions>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition />
              </Grid.ColumnDefinitions>

              <Label Grid.Column="0"
                     Grid.Row="0">
                Daten-Verzeichnis
              </Label>
              <TextBox Grid.Column="1"
                       Grid.Row="0"
                       Margin="2"
                       Text="{Binding MainSettings.DataDirectory, UpdateSourceTrigger=PropertyChanged}" />

              <Label Grid.Column="0"
                     Grid.Row="1">
                projekte.txt-Pfad
              </Label>
              <TextBox Grid.Column="1"
                       Grid.Row="1"
                       Margin="2"
                       Text="{Binding MainSettings.ProjectNumberFilePath, UpdateSourceTrigger=PropertyChanged}" />

              <Label Grid.Column="0"
                     Grid.Row="2">
                positionsnummern.txt-Pfad
              </Label>
              <TextBox Grid.Column="1"
                       Grid.Row="2"
                       Margin="2"
                       Text="{Binding MainSettings.PositionNumberFilePath, UpdateSourceTrigger=PropertyChanged}" />

              <Label Grid.Column="0"
                     Grid.Row="3">
                Monlist.exe-Pfad
              </Label>
              <TextBox Grid.Column="1"
                       Grid.Row="3"
                       Margin="2"
                       Text="{Binding MainSettings.MonlistExecutablePath, UpdateSourceTrigger=PropertyChanged}" />

              <Label Grid.Column="0"
                     Grid.Row="4">
                Mitarbeiternummer
              </Label>
              <TextBox Grid.Column="1"
                       Grid.Row="4"
                       Margin="2"
                       Text="{Binding MainSettings.MonlistEmployeeNumber, UpdateSourceTrigger=PropertyChanged}" />

              <Label Grid.Column="0"
                   Grid.Row="5">
                GB
              </Label>
              <ComboBox Grid.Column="1"
                     Grid.Row="5"
                     Margin="2"
                     Text="{Binding MainSettings.MonlistGBNumber, UpdateSourceTrigger=PropertyChanged}">
                     <ComboBoxItem>10</ComboBoxItem>
                     <ComboBoxItem>20</ComboBoxItem>
                     <ComboBoxItem>30</ComboBoxItem>
                     <ComboBoxItem>40</ComboBoxItem>
                     <ComboBoxItem>50</ComboBoxItem>
                     <ComboBoxItem>60</ComboBoxItem>
                     <ComboBoxItem>80</ComboBoxItem>
              </ComboBox>

              <Label Grid.Column="0"
                     Grid.Row="6">
                Projekt-Hitliste anzeigen
              </Label>
              <CheckBox Grid.Column="1"
                        Grid.Row="6"
                        Margin="2"
                        VerticalAlignment="Center"
                        IsChecked="{Binding MainSettings.ShowProjectHitList, UpdateSourceTrigger=PropertyChanged}" />

              <Label Grid.Column="0"
                     Grid.Row="7">
                Positions-Hitliste anzeigen
              </Label>
              <CheckBox Grid.Column="1"
                        Grid.Row="7"
                        Margin="2"
                        VerticalAlignment="Center"
                        IsChecked="{Binding MainSettings.ShowPositionHitList, UpdateSourceTrigger=PropertyChanged}" />
              
              <Label Grid.Column="0"
                     Grid.Row="8">
                Monatsübersicht anzeigen
              </Label>
              <CheckBox Grid.Column="1"
                        Grid.Row="8"
                        Margin="2"
                        VerticalAlignment="Center"
                        IsChecked="{Binding MainSettings.ShowMonthList, UpdateSourceTrigger=PropertyChanged}" />

              <Label Grid.Column="0"
                     Grid.Row="9">
                Hitlisten-Rückblick [Wochen]
              </Label>
              <TextBox Grid.Column="1"
                       Grid.Row="9"
                       Margin="2"
                       Text="{Binding MainSettings.HitListLookBackInWeeks, UpdateSourceTrigger=PropertyChanged}" />

              <Label Grid.Column="0"
                     Grid.Row="10">
                Stunden pro Tag [h]
              </Label>
              <TextBox Grid.Column="1"
                       Grid.Row="10"
                       Margin="2"
                       Text="{Binding MainSettings.HoursPerDay, UpdateSourceTrigger=PropertyChanged}" />

              <!-- auto break -->
              <Label Grid.Column="0"
                     Grid.Row="11">
                Automatische Pause einfügen
              </Label>
              <CheckBox Grid.Column="1"
                        Grid.Row="11"
                        Margin="2"
                        VerticalAlignment="Center"
                        x:Name="autoPause"
                        IsChecked="{Binding ParserSettings.InsertDayBreak, UpdateSourceTrigger=PropertyChanged}" />

              <Label Grid.Column="0"
                     Grid.Row="12"
                     IsEnabled="{Binding IsChecked, ElementName=autoPause, Mode=OneWay}">
                Uhrzeit [hh:mm]
              </Label>
              <TextBox Grid.Column="1"
                       Grid.Row="12"
                       Margin="2"
                       IsEnabled="{Binding IsChecked, ElementName=autoPause, Mode=OneWay}"
                       Text="{Binding ParserSettings.DayBreakTime, Converter={x:Static valueConverter:TimeItemConverter.Instance}}" />

              <Label Grid.Column="0"
                     Grid.Row="13"
                     IsEnabled="{Binding IsChecked, ElementName=autoPause, Mode=OneWay}">
                Dauer [min]
              </Label>
              <TextBox Grid.Column="1"
                       Grid.Row="13"
                       Margin="2"
                       IsEnabled="{Binding IsChecked, ElementName=autoPause, Mode=OneWay}"
                       Text="{Binding ParserSettings.DayBreakDurationInMinutes, UpdateSourceTrigger=PropertyChanged}" />

              <UniformGrid Grid.Column="0"
                           Grid.Row="14"
                           Grid.ColumnSpan="2"
                           VerticalAlignment="Bottom"
                           Columns="2">
                <Button Margin="0,0,2,0"
                        Click="EditPreferencesCancel_OnClick">Abbrechen</Button>
                <Button Margin="2,0,0,0"
                        Click="EditPreferencesSave_OnClick"
                        IsDefault="True">
                  Speichern
                </Button>
              </UniformGrid>

            </Grid>
          </DataTemplate>
        </Controls:Flyout.ContentTemplate>
      </Controls:Flyout>

      <!-- edit / new shortcut -->
      <Controls:Flyout Header="Shortcut"
                       Width="500"
                       Position="Right"
                       KeyboardNavigation.TabNavigation="Cycle"
                       Content="{Binding ElementName=mv, Path=ViewModel.EditShortCut}"
                       IsOpen="{Binding ElementName=mv, Path=ViewModel.EditShortCut, Converter={x:Static valueConverter:Null2FalseConverter.Instance}}">
        <Controls:Flyout.ContentTemplate>
          <DataTemplate DataType="{x:Type viewModels:ShortcutViewModel}">
            <DataTemplate.Resources>
              <Style TargetType="{x:Type TextBox}"
                     BasedOn="{StaticResource MONIMetroFlyoutTextBox}" />
            </DataTemplate.Resources>
            <!-- bind to IsOpen to set the focus to first editable textbox, not the best, but it works -->
            <views:ShortcutView x:Name="shortcutView"
                                IsOpen="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Controls:Flyout}}, Path=IsOpen}" />
          </DataTemplate>
        </Controls:Flyout.ContentTemplate>
      </Controls:Flyout>

      <!-- search projectnumbers -->
      <Controls:Flyout Header="Projektnummern-Suche"
                       Width="500"
                       Position="Right"
                       KeyboardNavigation.TabNavigation="Cycle"
                       Content="{Binding ElementName=mv, Path=ViewModel.PNSearch}"
                       IsOpen="{Binding ElementName=mv, Path=ViewModel.PNSearch.ShowPNSearch}">
        <Controls:Flyout.ContentTemplate>
          <DataTemplate DataType="{x:Type viewModels:PNSearchViewModel}">
            <DataTemplate.Resources>
              <Style TargetType="{x:Type TextBox}"
                     BasedOn="{StaticResource MONIMetroFlyoutTextBox}" />
            </DataTemplate.Resources>
            <!-- bind to IsOpen to set the focus to first editable textbox, not the best, but it works -->
            <views:PNSearchView x:Name="pnSearchView"
                                IsOpen="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Controls:Flyout}}, Path=IsOpen}"
                                AddShortCutService="{Binding ElementName=mv}" />
          </DataTemplate>
        </Controls:Flyout.ContentTemplate>
      </Controls:Flyout>

      <!-- search positionnumbers -->
      <Controls:Flyout Header="Positionsnummern-Suche"
                       Width="500"
                       Position="Right"
                       KeyboardNavigation.TabNavigation="Cycle"
                       Content="{Binding ElementName=mv, Path=ViewModel.PositionSearch}"
                       IsOpen="{Binding ElementName=mv, Path=ViewModel.PositionSearch.ShowPNSearch}">
        <Controls:Flyout.ContentTemplate>
          <DataTemplate DataType="{x:Type viewModels:PositionSearchViewModel}">
            <DataTemplate.Resources>
              <Style TargetType="{x:Type TextBox}"
                     BasedOn="{StaticResource MONIMetroFlyoutTextBox}" />
            </DataTemplate.Resources>
            <!-- bind to IsOpen to set the focus to first editable textbox, not the best, but it works -->
            <views:PositionSearchView x:Name="posSearchView"
                                      IsOpen="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Controls:Flyout}}, Path=IsOpen}"
                                      AddShortCutService="{Binding ElementName=mv}" />
          </DataTemplate>
        </Controls:Flyout.ContentTemplate>
      </Controls:Flyout>

      <!-- show update info -->
      <Controls:Flyout Header="Update-Info"
                       Width="500"
                       Position="Right"
                       KeyboardNavigation.TabNavigation="Cycle"
                       Content="{Binding ElementName=mv, Path=ViewModel.UpdateInfoViewModel}"
                       IsOpen="{Binding ElementName=mv, Path=ViewModel.UpdateInfoViewModel.ShowUpdateInfo}">
        <Controls:Flyout.ContentTemplate>
          <DataTemplate DataType="{x:Type viewModels:UpdateInfoViewModel}">
            <DataTemplate.Resources>
              <Style TargetType="{x:Type TextBox}"
                     BasedOn="{StaticResource MONIMetroFlyoutTextBox}" />
            </DataTemplate.Resources>
            <views:UpdateInfoView />
          </DataTemplate>
        </Controls:Flyout.ContentTemplate>
      </Controls:Flyout>
    </Controls:FlyoutsControl>

  </Controls:MetroWindow.Flyouts>

  <!-- *** layout root ***************************************************************** -->
  <Grid RenderOptions.ClearTypeHint="Enabled"
        TextOptions.TextFormattingMode="Display">
    
    <Grid.Resources>
      <CollectionViewSource x:Key="ShortCutCVS"
                            Source="{Binding ElementName=mv, Path=ViewModel.WorkWeek.Month.ShortCutStatistic}">
        <CollectionViewSource.GroupDescriptions>
          <util:CustomPropertyGroupDescription PropertyName="Group" />
        </CollectionViewSource.GroupDescriptions>
      </CollectionViewSource>
    </Grid.Resources>
    
    <Grid Margin="0 0 2 0">
      <Grid.ColumnDefinitions>
        <!-- month view -->
        <ColumnDefinition Width="Auto" />
        <!-- week view -->
        <ColumnDefinition Width="*" />
        <!-- vertical splitter -->
        <ColumnDefinition Width="Auto" />
        <!-- shortcuts -->
        <ColumnDefinition MinWidth="250" Width="250" />
        <!-- projekt hitlist -->
        <ColumnDefinition Width="Auto" />
        <!-- pos hitlist -->
        <ColumnDefinition Width="Auto" />
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <RowDefinition Height="50" />
        <RowDefinition Height="*" />
      </Grid.RowDefinitions>

      <!-- month change buttons-->
      <Grid Grid.Column="0" Grid.Row="0" Visibility="{Binding ElementName=mv, Path=ViewModel.MonthListVisibility}">
        <Grid.RowDefinitions>
          <RowDefinition Height="*" />
          <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <Button Grid.Column="0"
                Grid.Row="0"
                x:Name="btnPrevMonth"
                Background="#537DBBDA"
                Margin="2 3 1 1"
                Command="{Binding ElementName=mv, Path=ViewModel.PreviousMonthCommand}">
          <Rectangle Width="12"
                     Height="12">
            <Rectangle.Resources>
              <SolidColorBrush x:Key="BlackBrush"
                               Color="#CC119EDA" />
            </Rectangle.Resources>
            <Rectangle.Fill>
              <VisualBrush Stretch="Fill"
                           Visual="{StaticResource appbar_control_rewind_variant}" />
            </Rectangle.Fill>
          </Rectangle>
        </Button>
        
        <Button Grid.Column="0"
                Grid.Row="1"
                x:Name="btnNextMonth"
                Background="#537DBBDA"
                Margin="2 1 1 2"
                Command="{Binding ElementName=mv, Path=ViewModel.NextMonthCommand}">
          <Rectangle Width="12"
                     Height="12">
            <Rectangle.Resources>
              <SolidColorBrush x:Key="BlackBrush"
                               Color="#CC119EDA" />
            </Rectangle.Resources>
            <Rectangle.Fill>
              <VisualBrush Stretch="Fill"
                           Visual="{StaticResource appbar_control_fastforward_variant}" />
            </Rectangle.Fill>
          </Rectangle>
        </Button>
      </Grid>

      <!-- days of month -->
      <ListBox Grid.Row="1"
               Grid.Column="0"
               ScrollViewer.VerticalScrollBarVisibility="Auto"
               ScrollViewer.HorizontalScrollBarVisibility="Disabled"
               HorizontalContentAlignment="Stretch"
               ItemContainerStyle="{StaticResource NonVisibleSelectedListBoxItem}"
               Visibility="{Binding ElementName=mv, Path=ViewModel.MonthListVisibility}"
               ItemsSource="{Binding ElementName=mv, Path=ViewModel.WorkMonth.Days}"
               ItemTemplate="{StaticResource DayOfMonthDataTemplate}" />

      <!-- infos and week change buttons-->
      <Grid Grid.Column="1"
            Grid.Row="0">

        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="50" />
          <ColumnDefinition Width="Auto" />
          <ColumnDefinition Width="*" />
          <ColumnDefinition Width="61" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
          <RowDefinition Height="*" />
          <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <Button Grid.Column="0"
                Grid.Row="0"
                Grid.RowSpan="2"
                x:Name="btnPrev"
                Background="#537DBBDA"
                Margin="2 3 1 2"
                Command="{Binding ElementName=mv, Path=ViewModel.PreviousWeekCommand}">
          <Rectangle Width="15"
                     Height="15">
            <Rectangle.Resources>
              <SolidColorBrush x:Key="BlackBrush"
                               Color="#CC119EDA" />
            </Rectangle.Resources>
            <Rectangle.Fill>
              <VisualBrush Stretch="Fill"
                           Visual="{StaticResource appbar_arrow_left}" />
            </Rectangle.Fill>
          </Rectangle>
        </Button>

        <TextBlock Grid.Column="1"
                   Grid.Row="0"
                   HorizontalAlignment="Center"
                   FontWeight="Bold"
                   VerticalAlignment="Bottom"
                   Foreground="#CC119EDA"
                   FontSize="20"
                   Text="{Binding ElementName=mv, Path=ViewModel.WorkYear.Year}" />

        <StackPanel Grid.Column="2"
                    Grid.Row="0"
                    Orientation="Horizontal"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Bottom">
          <TextBlock HorizontalAlignment="Center"
                     FontWeight="Bold"
                     VerticalAlignment="Bottom"
                     Foreground="#CC7DBEDA"
                     Margin="2 0 5 2"
                     Text="{Binding ElementName=mv, Path=ViewModel.WorkWeek.HoursDuration, StringFormat='{}{0:f} h'}"
                     ToolTip="Wochenstundenzahl" />
          <TextBlock HorizontalAlignment="Center"
                     FontWeight="Bold"
                     VerticalAlignment="Bottom"
                     Foreground="#CC119EDA"
                     FontSize="20"
                     Text="{Binding ElementName=mv, Path=ViewModel.WorkWeek.WeekOfYear, StringFormat='{}KW: {0}'}"
                     ToolTip="Kalenderwoche" />
        </StackPanel>

        <StackPanel Grid.Column="2"
                    Grid.Row="1"
                    Orientation="Horizontal"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Bottom">
          <TextBlock FontWeight="Bold"
                     VerticalAlignment="Bottom"
                     Foreground="#CC7DBEDA"
                     Margin="2 0 5 2"
                     Text="{Binding ElementName=mv, Path=ViewModel.WorkWeek.Month.HoursDuration, StringFormat='{}{0:f} h'}"
                     ToolTip="Ist-Stunden Monat" />
          <TextBlock FontWeight="Bold"
                     VerticalAlignment="Bottom"
                     Margin="2 0 5 2"
                     Text="{Binding ElementName=mv, Path=ViewModel.WorkWeek.Month.PreviewHours, StringFormat='{}({0:f} h'}"
                     ToolTip="Prognose-Stunden Monat">
            <TextBlock.Foreground>
              <MultiBinding Converter="{x:Static valueConverter:LessThanColorConverter.Instance}">
                <MultiBinding.Bindings>
                  <Binding Path="ViewModel.WorkWeek.Month.NecessaryHours"
                           ElementName="mv"
                           Mode="OneWay" />
                  <Binding Path="ViewModel.WorkWeek.Month.PreviewHours"
                           ElementName="mv"
                           Mode="OneWay" />
                </MultiBinding.Bindings>
              </MultiBinding>
            </TextBlock.Foreground>
          </TextBlock>
          <TextBlock FontWeight="Bold"
                     VerticalAlignment="Bottom"
                     Foreground="#CC7DBEDA"
                     Margin="2 0 5 2"
                     Text="von" />
          <TextBlock FontWeight="Bold"
                     VerticalAlignment="Bottom"
                     Foreground="#CC7DBEDA"
                     Margin="2 0 5 2"
                     Text="{Binding ElementName=mv, Path=ViewModel.WorkWeek.Month.NecessaryHours, StringFormat='{}{0:f} h)'}"
                     ToolTip="Soll-Stunden Monat" />
          <TextBlock FontWeight="Bold"
                     VerticalAlignment="Bottom"
                     FontSize="20"
                     Foreground="#CC119EDA"
                     Text="{Binding ElementName=mv, Path=ViewModel.WorkWeek.Month.MonthName}" />
        </StackPanel>

        <Button Grid.Column="3"
                Grid.Row="0"
                Grid.RowSpan="2"
                x:Name="btnNext"
                Background="#537DBBDA"
                Margin="1 3 11 2"
                Command="{Binding ElementName=mv, Path=ViewModel.NextWeekCommand}">
          <Rectangle Width="15"
                     Height="15">
            <Rectangle.Resources>
              <SolidColorBrush x:Key="BlackBrush"
                               Color="#CC119EDA" />
            </Rectangle.Resources>
            <Rectangle.Fill>
              <VisualBrush Stretch="Fill"
                           Visual="{StaticResource appbar_arrow_right}" />
            </Rectangle.Fill>
          </Rectangle>
        </Button>

      </Grid>

      <!-- week view -->
      <!-- days -->
      <ListBox Grid.Row="1"
               Grid.Column="1"
               Grid.IsSharedSizeScope="True"
               ScrollViewer.VerticalScrollBarVisibility="Auto"
               ScrollViewer.HorizontalScrollBarVisibility="Disabled"
               HorizontalContentAlignment="Stretch"
               ItemContainerStyle="{StaticResource NonVisibleSelectedListBoxItem}"
               ItemsSource="{Binding ElementName=mv, Path=ViewModel.WorkWeek.Days}">
        <ListBox.ItemTemplate>
          <!-- this is a day -->
          <DataTemplate>
            <Border x:Name="dayBorder"
                    BorderThickness="1"
                    Background="{Binding DayType, Converter={x:Static valueConverter:DayTypeColorConverter.Instance}}"
                    Margin="1"
                    Padding="1"
                    SnapsToDevicePixels="True">
              <Grid>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="Auto"
                                    SharedSizeGroup="Labels" />
                  <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                  <RowDefinition Height="Auto" />
                  <RowDefinition Height="Auto" />
                  <RowDefinition Height="Auto" />
                  <RowDefinition Height="Auto" />
                  <RowDefinition Height="*" />
                </Grid.RowDefinitions>

                <TextBlock Grid.Column="0"
                           Grid.Row="0"
                           Margin="0 4 0 0"
                           Text="{Binding DayOfWeek, Converter={x:Static valueConverter:DayOfWeekTranslatorConverter.Instance}}"
                           Foreground="{StaticResource lightText}"
                           HorizontalAlignment="Center" />
                <TextBlock Grid.Column="0"
                           Grid.Row="1"
                           Text="{Binding SpecialDay.Name}"
                           Foreground="{StaticResource lightText}"
                           FontWeight="Bold"
                           Visibility="{Binding SpecialDay, Converter={StaticResource null2CollapsedConverter}}"
                           HorizontalAlignment="Center" />
                <TextBlock Grid.Column="0"
                           Grid.Row="2"
                           Text="{Binding Day}"
                           FontWeight="Bold"
                           HorizontalAlignment="Center" />
                <TextBlock Grid.Column="0"
                           Grid.Row="3"
                           Text="{Binding HoursDuration, StringFormat='{}{0:f} h'}"
                           FontWeight="Bold"
                           Padding="3 0 3 0"
                           Foreground="{Binding HoursDuration, Converter={x:Static valueConverter:DurationFGColorConverter.Instance}}"
                           Background="{Binding HoursDuration, Converter={x:Static valueConverter:DurationBGColorConverter.Instance}}"
                           HorizontalAlignment="Center" />

                <TextBox x:Name="userEntry"
                         Loaded="TextBox_Loaded"
                         GotKeyboardFocus="WorkDayTextBox_OnGotKeyboardFocus"
                         PreviewKeyDown="WorkDayTextBox_OnKeyDown"
                         Grid.Column="1"
                         Grid.Row="0"
                         Grid.RowSpan="3"
                         Margin="3,2,2,2"
                         Tag="{Binding}"
                         AcceptsReturn="True"
                         Text="{Binding OriginalString, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" />

                <!-- day items -->
                <ItemsControl Grid.Column="1"
                              Grid.Row="3"
                              Grid.RowSpan="2"
                              Margin="3,0,2,2"
                              ItemsSource="{Binding Items}"
                              IsTabStop="False"
                              Grid.IsSharedSizeScope="True">
                  <ItemsControl.ItemTemplate>
                    <DataTemplate>
                      <Grid>
                        <attachedCommandBehavior:CommandBehaviorCollection.Behaviors>
                          <!-- left click on item in daylist, select workitems text in textbox -->
                          <attachedCommandBehavior:BehaviorBinding Event="PreviewMouseLeftButtonUp"
                                                                   Action="{Binding ElementName=mv, Path=ViewModel.SelectWorkItemTextComplete, Mode=OneWay}">
                            <attachedCommandBehavior:BehaviorBinding.CommandParameter>
                              <MultiBinding Converter="{x:Static valueConverter:MultiBindingObjectConverter.Instance}">
                                <!-- WorkItem -->
                                <Binding Mode="OneWay" />
                                <!-- TextBox -->
                                <Binding ElementName="userEntry"
                                         Mode="OneWay" />
                              </MultiBinding>
                            </attachedCommandBehavior:BehaviorBinding.CommandParameter>
                          </attachedCommandBehavior:BehaviorBinding>
                          <!-- right click on item in daylist, select workitems text without time in textbox -->
                          <attachedCommandBehavior:BehaviorBinding Event="PreviewMouseRightButtonUp"
                                                                   Action="{Binding ElementName=mv, Path=ViewModel.SelectWorkItemTextWithOutTime, Mode=OneWay}">
                            <attachedCommandBehavior:BehaviorBinding.CommandParameter>
                              <MultiBinding Converter="{x:Static valueConverter:MultiBindingObjectConverter.Instance}">
                                <!-- WorkItem -->
                                <Binding Mode="OneWay" />
                                <!-- TextBox -->
                                <Binding ElementName="userEntry"
                                         Mode="OneWay" />
                              </MultiBinding>
                            </attachedCommandBehavior:BehaviorBinding.CommandParameter>
                          </attachedCommandBehavior:BehaviorBinding>
                        </attachedCommandBehavior:CommandBehaviorCollection.Behaviors>

                        <Grid.ColumnDefinitions>
                          <ColumnDefinition Width="Auto"
                                            SharedSizeGroup="1" />
                          <ColumnDefinition Width="Auto"
                                            SharedSizeGroup="2" />
                          <ColumnDefinition Width="Auto"
                                            SharedSizeGroup="3" />
                          <ColumnDefinition Width="Auto"
                                            SharedSizeGroup="4" />
                          <ColumnDefinition Width="Auto"
                                            SharedSizeGroup="5" />
                          <ColumnDefinition Width="Auto"
                                            SharedSizeGroup="6" />
                          <ColumnDefinition Width="Auto"
                                            SharedSizeGroup="7" />
                          <ColumnDefinition Width="Auto"
                                            SharedSizeGroup="8" />
                          <ColumnDefinition Width="Auto"
                                            SharedSizeGroup="9" />
                          <ColumnDefinition Width="Auto"
                                            SharedSizeGroup="10" />
                        </Grid.ColumnDefinitions>
                        <TextBlock Grid.Column="0"
                                   TextAlignment="Right"
                                   Text="{Binding Start}"
                                   FontWeight="Bold" />
                        <TextBlock Grid.Column="1"
                                   Text=" => "
                                   Foreground="{StaticResource lightText}" />
                        <TextBlock Grid.Column="2"
                                   TextAlignment="Right"
                                   Text="{Binding End}"
                                   FontWeight="Bold" />
                        <TextBlock Grid.Column="3"
                                   TextAlignment="Right"
                                   Foreground="DarkSlateGray"
                                   Text="{Binding HoursDuration, StringFormat='{} ({0:f} h)'}" />
                        <TextBlock Grid.Column="4"
                                   Text=" : "
                                   Foreground="{StaticResource lightText}" />
                        <TextBlock Grid.Column="5"
                                   Text="{Binding Project}"
                                   FontWeight="Bold" />
                        <TextBlock Grid.Column="6"
                                   Text="-"
                                   Foreground="{StaticResource lightText}" />
                        <TextBlock Grid.Column="7"
                                   Text="{Binding Position}"
                                   FontWeight="Bold" />
                        <TextBlock Grid.Column="8"
                                   Text="=>"
                                   Foreground="{StaticResource lightText}" />
                        <TextBlock Grid.Column="9"
                                   Text="{Binding Description}"
                                   Foreground="{StaticResource lightText}" />
                      </Grid>
                    </DataTemplate>
                  </ItemsControl.ItemTemplate>
                </ItemsControl>
              </Grid>
            </Border>
            <DataTemplate.Triggers>
              <DataTrigger Binding="{Binding FocusMe}"
                           Value="true">
                <Setter TargetName="userEntry"
                        Property="FocusManager.FocusedElement"
                        Value="{Binding ElementName=userEntry}" />
              </DataTrigger>
            </DataTemplate.Triggers>
          </DataTemplate>
        </ListBox.ItemTemplate>
      </ListBox>

      <GridSplitter Grid.Column="2"
                    Grid.Row="0"
                    Grid.RowSpan="2"
                    VerticalAlignment="Stretch"
                    HorizontalAlignment="Stretch"
                    Width="5"
                    Background="Transparent" />

      <!-- shortcuts -->
      <StackPanel x:Name="shortCutHeader"
                  Grid.Column="3"
                  Grid.Row="0"
                  HorizontalAlignment="Right"
                  VerticalAlignment="Bottom"
                  Orientation="Horizontal"
                  Visibility="Collapsed">
        <TextBlock FontSize="20"
                   Foreground="#CC119EDA"
                   FontWeight="Bold">
                    Shortcuts
        </TextBlock>
        <Button Width="13"
                Height="20"
                Margin="10 0 0 0"
                Style="{StaticResource ImageButtonStyle}"
                Click="AddShortcut_OnClick"
                ToolTip="Neuen Shortcut erstellen">
          <Rectangle Width="10"
                     Height="20">
            <Rectangle.Resources>
              <SolidColorBrush x:Key="BlackBrush"
                               Color="#CC119EDA" />
            </Rectangle.Resources>
            <Rectangle.Fill>
              <VisualBrush Stretch="Fill"
                           Visual="{StaticResource appbar_location_add}" />
            </Rectangle.Fill>
          </Rectangle>
        </Button>
      </StackPanel>

      <ListBox x:Name="shortCutList"
               Margin="0 1 0 0"
               Grid.Row="1"
               Grid.Column="3"
               Grid.IsSharedSizeScope="True"
               ScrollViewer.VerticalScrollBarVisibility="Auto"
               ScrollViewer.HorizontalScrollBarVisibility="Disabled"
               HorizontalContentAlignment="Stretch"
               Visibility="Collapsed"
               dd:DragDrop.IsDragSource="True"
               dd:DragDrop.IsDropTarget="True"
               dd:DragDrop.DropHandler="{Binding ElementName=mv, Path=ViewModel}"
               RenderOptions.ClearTypeHint="Enabled"
               TextOptions.TextFormattingMode="Display"
               ItemContainerStyle="{StaticResource NonVisibleSelectedListBoxItem}"
               ItemsSource="{Binding Source={StaticResource ShortCutCVS}}">
        
        <ListBox.GroupStyle>
          <GroupStyle ContainerStyle="{StaticResource ShortCutGroupGroupItemStyle}">
            <GroupStyle.Panel>
              <ItemsPanelTemplate>
                <VirtualizingStackPanel />
              </ItemsPanelTemplate>
            </GroupStyle.Panel>
          </GroupStyle>
        </ListBox.GroupStyle>
        
        <ListBox.ItemTemplate>
            <!-- shortcut -->
            <DataTemplate DataType="{x:Type data:ShortCutStatistic}">

              <DataTemplate.Triggers>
                <EventTrigger RoutedEvent="Control.MouseEnter">
                  <BeginStoryboard>
                    <Storyboard>
                      <DoubleAnimationUsingKeyFrames BeginTime="00:00:00.200"
                                                     Storyboard.TargetName="actions"
                                                     Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)">
                        <EasingDoubleKeyFrame KeyTime="00:00:00.400"
                                              Value="0"
                                              x:Name="showFrame">
                          <EasingDoubleKeyFrame.EasingFunction>
                            <CubicEase EasingMode="EaseOut" />
                          </EasingDoubleKeyFrame.EasingFunction>
                        </EasingDoubleKeyFrame>
                      </DoubleAnimationUsingKeyFrames>

                      <DoubleAnimation Duration="0:0:0.3"
                                       BeginTime="00:00:00.400"
                                       To="0.8"
                                       Storyboard.TargetName="actions"
                                       Storyboard.TargetProperty="Opacity" />
                    </Storyboard>
                  </BeginStoryboard>
                </EventTrigger>
                <EventTrigger RoutedEvent="Control.MouseLeave">
                  <BeginStoryboard>
                    <Storyboard>
                      <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                     Storyboard.TargetName="actions"
                                                     Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)">
                        <EasingDoubleKeyFrame KeyTime="00:00:00.400"
                                              Value="200"
                                              x:Name="hideFrame">
                          <EasingDoubleKeyFrame.EasingFunction>
                            <CubicEase EasingMode="EaseOut" />
                          </EasingDoubleKeyFrame.EasingFunction>
                        </EasingDoubleKeyFrame>
                      </DoubleAnimationUsingKeyFrames>

                      
                      <DoubleAnimation Duration="0:0:0.3"
                                       To="0"
                                       Storyboard.TargetName="actions"
                                       Storyboard.TargetProperty="Opacity" />
                    </Storyboard>
                  </BeginStoryboard>
                </EventTrigger>
              </DataTemplate.Triggers>

              <!-- use transparent background for correct highlighting -->
              <Grid Background="Transparent">

                <Grid x:Name="root"
                      Margin="1 1 1 1"
                      Background="#FFF3EDED">

                  <!-- usage history graph -->
                  <ItemsControl Margin="-1 0 -1 -1"
                                ItemTemplate="{StaticResource UsageHistoryDayDataTemplate}"
                                ItemsSource="{Binding UsageHistory}">
                    <ItemsControl.ItemsPanel>
                      <ItemsPanelTemplate>
                        <UniformGrid Rows="1"
                                     Columns="31" />
                      </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                  </ItemsControl>

                  <Grid Margin="2 2 2 5">
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="Auto"
                                        SharedSizeGroup="0" />
                      <ColumnDefinition Width="*" />
                      <ColumnDefinition Width="Auto" />
                      <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>

                    <TextBlock Grid.Column="0"
                               VerticalAlignment="Bottom"
                               Text="{Binding Key}"
                               FontWeight="Bold"
                               FontSize="14" />
                    <TextBlock Grid.Column="1"
                               VerticalAlignment="Bottom"
                               Text="{Binding Expansion}"
                               Foreground="DarkSlateGray"
                               FontSize="10"
                               TextTrimming="CharacterEllipsis"
                               Margin="10 0 0 0" />
                    <TextBlock Grid.Column="2"
                               VerticalAlignment="Bottom"
                               HorizontalAlignment="Right"
                               Text="{Binding UsedInMonth, StringFormat='{} {0:##}'}"
                               Foreground="Gray"
                               FontWeight="Bold"
                               FontSize="14"
                               Margin="10 0 3 0" />

                    <!--wholeday expansion info-->
                    <Rectangle Grid.Column="3"
                               VerticalAlignment="Top"
                               HorizontalAlignment="Right"
                               Width="8"
                               Height="15"
                               Margin="0 -2 0 0"
                               Visibility="{Binding WholeDayExpansion, Converter={StaticResource false2HiddenConverter}}"
                               Fill="{StaticResource ribbonIcon}"
                               ToolTip="Ersetzt ganzen Tag" />
                  </Grid>

                  <!--actions-->
                  <Border x:Name="actions"
                          Background="Silver"
                          Margin="0 1 2 1"
                          HorizontalAlignment="Right"
                          Opacity="0">
                    <Border.RenderTransform>
                      <TranslateTransform X="200" />
                    </Border.RenderTransform>

                    <StackPanel Orientation="Horizontal"
                                VerticalAlignment="Center">

                      <Button Tag="{Binding }"
                              Style="{DynamicResource MetroCircleEditButtonStyle}"
                              Width="21"
                              Height="21"
                              Margin="5 1 5 1"
                              Click="EditShortcut_OnClick"
                              ToolTip="Shortcut editieren">
                        <Rectangle Width="10"
                                   Height="10"
                                   Fill="{StaticResource editIcon}" />
                      </Button>
                      <Button Tag="{Binding }"
                              Style="{DynamicResource MetroCircleEditButtonStyle}"
                              Width="21"
                              Height="21"
                              Margin="5 1 5 1"
                              Click="RemoveShortcut_OnClick"
                              ToolTip="Shortcut löschen">
                        <Rectangle Width="10"
                                   Height="10"
                                   Fill="{StaticResource deleteIcon}" />
                      </Button>

                    </StackPanel>
                  </Border>
                </Grid>

              </Grid>
            </DataTemplate>
          </ListBox.ItemTemplate>
      </ListBox>

      <!-- project hitlist -->
      <TextBlock Grid.Column="4"
                 Grid.Row="0"
                 HorizontalAlignment="Right"
                 VerticalAlignment="Bottom"
                 FontSize="20"
                 Foreground="#CC119EDA"
                 FontWeight="Bold"
                 Margin="0 0 10 0"
                 Visibility="{Binding ElementName=mv, Path=ViewModel.ProjectHitListVisibility}">
                Projekt-Hitliste
      </TextBlock>
      <ListBox Grid.Row="1"
               Grid.Column="4"
               Margin="0 1 0 0"
               ScrollViewer.VerticalScrollBarVisibility="Auto"
               ScrollViewer.HorizontalScrollBarVisibility="Disabled"
               HorizontalContentAlignment="Stretch"
               RenderOptions.ClearTypeHint="Enabled"
               TextOptions.TextFormattingMode="Display"
               ItemContainerStyle="{StaticResource NonVisibleSelectedListBoxItem}"
               Visibility="{Binding ElementName=mv, Path=ViewModel.ProjectHitListVisibility}"
               ItemsSource="{Binding ElementName=mv, Path=ViewModel.WorkYear.ProjectHitlist, Mode=OneWay, IsAsync=True}">
        <ListBox.ItemTemplate>
            <!-- shortcut -->
            <DataTemplate>
              <Border BorderThickness="1"
                      BorderBrush="#FFF3EDED"
                      Background="#FFF3EDED"
                      Margin="1"
                      Padding="1"
                      SnapsToDevicePixels="True"
                      PreviewMouseLeftButtonUp="Project_OnPreviewMouseLeftButtonUp"
                      Tag="{Binding}">
                <Grid>
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"
                                      SharedSizeGroup="0" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                  </Grid.ColumnDefinitions>
                  <TextBlock Grid.Column="0"
                             Text="{Binding Key}"
                             VerticalAlignment="Bottom"
                             FontWeight="Bold"
                             FontSize="14" />
                  <TextBlock Grid.Column="1"
                             Text="{Binding LastUsedDescription}"
                             VerticalAlignment="Bottom"
                             Foreground="DarkSlateGray"
                             FontSize="10"
                             Margin="10 0 0 0" />
                  <TextBlock Grid.Column="2"
                             VerticalAlignment="Center"
                             Text="{Binding HoursUsed}"
                             Foreground="Gray"
                             FontWeight="Bold"
                             FontSize="14"
                             Margin="10 0 0 0" />
                </Grid>
              </Border>
            </DataTemplate>
          </ListBox.ItemTemplate>
      </ListBox>

      <!-- position hitlist -->
      <TextBlock Grid.Column="5"
                 Grid.Row="0"
                 HorizontalAlignment="Right"
                 VerticalAlignment="Bottom"
                 FontSize="20"
                 Foreground="#CC119EDA"
                 FontWeight="Bold"
                 Margin="0 0 10 0"
                 Visibility="{Binding ElementName=mv, Path=ViewModel.PositionHitListVisibility}">
                Positions-Hitliste
      </TextBlock>
      <ListBox Grid.Row="1"
               Grid.Column="5"
               Margin="0 1 0 0"
               ScrollViewer.VerticalScrollBarVisibility="Auto"
               ScrollViewer.HorizontalScrollBarVisibility="Disabled"
               HorizontalContentAlignment="Stretch"
               RenderOptions.ClearTypeHint="Enabled"
               TextOptions.TextFormattingMode="Display"
               ItemContainerStyle="{StaticResource NonVisibleSelectedListBoxItem}"
               Visibility="{Binding ElementName=mv, Path=ViewModel.PositionHitListVisibility}"
               ItemsSource="{Binding ElementName=mv, Path=ViewModel.WorkYear.PositionHitlist, Mode=OneWay, IsAsync=True}">
        <ListBox.ItemTemplate>
            <DataTemplate>
              <Border BorderThickness="1"
                      BorderBrush="#FFF3EDED"
                      Background="#FFF3EDED"
                      Margin="1"
                      Padding="1"
                      SnapsToDevicePixels="True"
                      PreviewMouseLeftButtonUp="Position_OnPreviewMouseLeftButtonUp"
                      Tag="{Binding}">
                <Grid>
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"
                                      SharedSizeGroup="0" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                  </Grid.ColumnDefinitions>
                  <TextBlock Grid.Column="0"
                             Text="{Binding Key}"
                             VerticalAlignment="Bottom"
                             FontWeight="Bold"
                             FontSize="14" />
                  <TextBlock Grid.Column="1"
                             Text="{Binding LastUsedDescription}"
                             VerticalAlignment="Bottom"
                             Foreground="DarkSlateGray"
                             FontSize="10"
                             Margin="10 0 0 0" />
                  <TextBlock Grid.Column="2"
                             VerticalAlignment="Center"
                             Text="{Binding HoursUsed}"
                             Foreground="Gray"
                             FontWeight="Bold"
                             FontSize="14"
                             Margin="10 0 0 0" />
                </Grid>
              </Border>
            </DataTemplate>
          </ListBox.ItemTemplate>
      </ListBox>
    </Grid>

    <!-- get user password -->
    <Grid Visibility="{Binding ElementName=mv, Path=ViewModel.ShowPasswordDialog, Converter={StaticResource false2CollapsedConverter}}">
      <Border Background="SkyBlue"
              Opacity="0.7" />
      <TextBlock FontSize="80"
                 FontWeight="Bold"
                 HorizontalAlignment="Center"
                 VerticalAlignment="Center"
                 Foreground="#2CB4EB"
                 Margin="0 0 300 200">
                passwort bitte
      </TextBlock>
      <Border Background="White"
              Width="400"
              Height="150">
        <Grid VerticalAlignment="Center"
              Margin="2">
          <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
          </Grid.RowDefinitions>
          <Grid.ColumnDefinitions>
            <ColumnDefinition />
            <ColumnDefinition />
          </Grid.ColumnDefinitions>
          <TextBlock Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" Foreground="White" Background="Red" FontWeight="Bold" TextWrapping="Wrap">
            Hierduch wird der gesamte, aktuell angezeigte Monat in MonList ersetzt. Alle Daten in MonList werden hierdurch überschrieben!
          </TextBlock>
          <Label Grid.Column="0"
                 Grid.Row="2">
            Passwort
          </Label>
          <PasswordBox Grid.Column="1"
                       Grid.Row="2"
                       Margin="2"
                       x:Name="passwordBox" />

          <Button Grid.Column="0"
                  Grid.Row="3"
                  Margin="0,0,2,0"
                  Click="PasswordCancel_OnClick">
            Abbrechen
          </Button>
          <Button Grid.Column="1"
                  Grid.Row="3"
                  Margin="2,0,0,0"
                  Click="PasswordOK_OnClick"
                  IsDefault="True">
            OK
          </Button>
        </Grid>
      </Border>
    </Grid>

  </Grid>
</Controls:MetroWindow>