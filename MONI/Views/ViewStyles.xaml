<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls">

  <!-- expander style for shortcuts ListView GroupStyle -->

  <Style x:Key="ShortCutMetroExpander"
         TargetType="{x:Type Expander}"
         BasedOn="{StaticResource MetroExpander}">
    <Setter Property="Margin"
            Value="0 1 0 1" />
    <Setter Property="Padding"
            Value="0" />
    <Setter Property="BorderThickness"
            Value="0" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Expander}">
          <Grid>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver" />
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity"
                                                   Storyboard.TargetName="DisabledVisualElement">
                      <SplineDoubleKeyFrame KeyTime="0"
                                            Value="0.7" />
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                   Storyboard.TargetName="ExpanderRoot">
                      <EasingDoubleKeyFrame KeyTime="0"
                                            Value="0.3" />
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Rectangle x:Name="DisabledVisualElement"
                       Fill="{DynamicResource ControlsDisabledBrush}"
                       IsHitTestVisible="false"
                       Opacity="0" />
            <DockPanel x:Name="ExpanderRoot">
              <Border x:Name="HeaderSite"
                      Background="{TemplateBinding Background}"
                      BorderBrush="{TemplateBinding BorderBrush}"
                      BorderThickness="0"
                      Margin="1 0 1 0"
                      DockPanel.Dock="Top">
                <DockPanel>
                  <ToggleButton x:Name="ToggleSite"
                                Margin="2"
                                HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                Background="Transparent"
                                BorderBrush="Transparent"
                                DockPanel.Dock="Left"
                                FocusVisualStyle="{x:Null}"
                                IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                Style="{DynamicResource ExpanderDownHeaderStyle}" />
                  <ContentPresenter Margin="{TemplateBinding Padding}"
                                    Content="{TemplateBinding Header}"
                                    ContentTemplate="{TemplateBinding HeaderTemplate}"
                                    ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                                    RecognizesAccessKey="True"
                                    TextElement.FontSize="{TemplateBinding controls:ControlsHelper.HeaderFontSize}"
                                    TextElement.FontStretch="{TemplateBinding controls:ControlsHelper.HeaderFontStretch}"
                                    TextElement.FontWeight="{TemplateBinding controls:ControlsHelper.HeaderFontWeight}" />
                </DockPanel>
              </Border>
              <Border x:Name="ExpandSite"
                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                      Background="Transparent"
                      BorderBrush="{TemplateBinding BorderBrush}"
                      BorderThickness="0"
                      DockPanel.Dock="Bottom"
                      Focusable="false"
                      Opacity="0"
                      Visibility="Collapsed">
                <ContentPresenter Margin="{TemplateBinding Padding}"
                                  Content="{TemplateBinding Content}"
                                  ContentTemplate="{TemplateBinding ContentTemplate}"
                                  Cursor="{TemplateBinding Cursor}" />
              </Border>
            </DockPanel>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsExpanded"
                     Value="true">
              <Setter TargetName="ExpandSite"
                      Property="Visibility"
                      Value="Visible" />
              <Trigger.EnterActions>
                <BeginStoryboard>
                  <Storyboard>
                    <DoubleAnimation Duration="0:0:0.25"
                                     Storyboard.TargetName="ExpandSite"
                                     Storyboard.TargetProperty="(UIElement.Opacity)"
                                     To="1" />
                  </Storyboard>
                </BeginStoryboard>
              </Trigger.EnterActions>
              <Trigger.ExitActions>
                <BeginStoryboard>
                  <Storyboard>
                    <DoubleAnimation Duration="0:0:0.25"
                                     Storyboard.TargetName="ExpandSite"
                                     Storyboard.TargetProperty="(UIElement.Opacity)"
                                     To="0" />
                  </Storyboard>
                </BeginStoryboard>
              </Trigger.ExitActions>
            </Trigger>
            <Trigger Property="ExpandDirection"
                     Value="Right">
              <Setter TargetName="ExpandSite"
                      Property="DockPanel.Dock"
                      Value="Right" />
              <Setter TargetName="ExpandSite"
                      Property="BorderThickness"
                      Value="0,1,1,1" />
              <Setter TargetName="HeaderSite"
                      Property="DockPanel.Dock"
                      Value="Left" />
              <Setter TargetName="ToggleSite"
                      Property="Style"
                      Value="{DynamicResource ExpanderRightHeaderStyle}" />
              <Setter TargetName="ToggleSite"
                      Property="DockPanel.Dock"
                      Value="Top" />
            </Trigger>
            <Trigger Property="ExpandDirection"
                     Value="Up">
              <Setter TargetName="ExpandSite"
                      Property="DockPanel.Dock"
                      Value="Top" />
              <Setter TargetName="ExpandSite"
                      Property="BorderThickness"
                      Value="1,1,1,0" />
              <Setter TargetName="HeaderSite"
                      Property="DockPanel.Dock"
                      Value="Bottom" />
              <Setter TargetName="ToggleSite"
                      Property="Style"
                      Value="{DynamicResource ExpanderUpHeaderStyle}" />
            </Trigger>
            <Trigger Property="ExpandDirection"
                     Value="Left">
              <Setter TargetName="ExpandSite"
                      Property="DockPanel.Dock"
                      Value="Left" />
              <Setter TargetName="ExpandSite"
                      Property="BorderThickness"
                      Value="1,1,0,1" />
              <Setter TargetName="HeaderSite"
                      Property="DockPanel.Dock"
                      Value="Right" />
              <Setter TargetName="ToggleSite"
                      Property="Style"
                      Value="{DynamicResource ExpanderLeftHeaderStyle}" />
              <Setter TargetName="ToggleSite"
                      Property="DockPanel.Dock"
                      Value="Top" />
            </Trigger>
            <Trigger Property="IsEnabled"
                     Value="false">
              <Setter Property="Foreground"
                      Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

</ResourceDictionary>