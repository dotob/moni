<Controls:MetroWindow x:Class="MONI.MainView"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                      xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
                      xmlns:Util1="clr-namespace:MONI.Util"
                      xmlns:dd="clr-namespace:GongSolutions.Wpf.DragDrop;assembly=GongSolutions.Wpf.DragDrop"
                      xmlns:data="clr-namespace:MONI.Data"
                      xmlns:viewModels="clr-namespace:MONI.ViewModels"
                      xmlns:views="clr-namespace:MONI.Views"
                      Title="MONI"
                      Width="800"
                      MinWidth="600"
                      Height="700"
                      MinHeight="500"
                      PreviewKeyDown="mv_PreviewKeyDown"
                      x:Name="mv"
                      WindowPlacementSettings="{Binding ElementName=mv, Path=ViewModel.CustomWindowPlacementSettings, Mode=OneWay}"
                      SaveWindowPosition="True"
                      Icon="/MONI;component/Resources/moni.ico">

  <Window.Resources>
    <ResourceDictionary>
      <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Colours.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MONI;component/Resources/Controls.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/Blue.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/BaseLight.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MONI;component/Resources/FlatButton.xaml" />
        <ResourceDictionary Source="Resources/Icons.xaml" />
      </ResourceDictionary.MergedDictionaries>

      <Util1:DayTypeColorConverter x:Key="dayTypeColorConverter" />
      <Util1:DurationBGColorConverter x:Key="durationBgConverter" />
      <Util1:DurationFGColorConverter x:Key="durationFgConverter" />
      <Util1:Null2CollapsedConverter x:Key="null2CollapsedConverter" />
      <Util1:Null2FalseConverter x:Key="null2FalseConverter" />
      <Util1:FalseToCollapsedConverter x:Key="false2CollapsedConverter" />
      <Util1:TimeItemConverter x:Key="timeItemConverter" />
      <Util1:ScaleDoubleConverter x:Key="scaleDoubleConverter" />
      <Util1:TodayColorConverter x:Key="todayColorConverter" />
      <Util1:LessThanColorConverter x:Key="lessThanColorConverter" />
      <Util1:DayOfWeekTranslatorConverter x:Key="dayNameConverter" />

      <SolidColorBrush x:Key="lightText"
                       Color="DarkSlateGray" />

      <VisualBrush Stretch="Fill"
                   x:Key="editIcon"
                   Visual="{StaticResource appbar_edit}" />
      <VisualBrush Stretch="Fill"
                   x:Key="deleteIcon"
                   Visual="{StaticResource appbar_delete}" />
      <VisualBrush Stretch="Fill"
                   x:Key="upIcon"
                   Visual="{StaticResource appbar_chevron_up}" />
      <VisualBrush Stretch="Fill"
                   x:Key="downIcon"
                   Visual="{StaticResource appbar_chevron_down}" />
      <VisualBrush Stretch="Fill"
                   x:Key="ribbonIcon"
                   Visual="{StaticResource appbar_ribbon}" />

      <Style TargetType="{x:Type TextBox}"
             BasedOn="{StaticResource MetroTextBox}">
        <Setter Property="Validation.ErrorTemplate"
                Value="{x:Null}" />
      </Style>
    </ResourceDictionary>
  </Window.Resources>

  <!-- *** window commands ***************************************************************** -->
  <Controls:MetroWindow.WindowCommands>
    <Controls:WindowCommands>
      <Button Click="ToMonlist_Button_Click"
              x:Name="OpenMonlist">
        <StackPanel Orientation="Horizontal">
          <Rectangle Width="20"
                     Height="20">
            <Rectangle.Resources>
              <SolidColorBrush x:Key="BlackBrush"
                               Color="White" />
            </Rectangle.Resources>
            <Rectangle.Fill>
              <VisualBrush Stretch="Fill"
                           Visual="{StaticResource appbar_cabinet_out}" />
            </Rectangle.Fill>
            <Rectangle.ToolTip>
              <ToolTip>
                <TextBlock Text="Daten in Monlist importieren"></TextBlock>
              </ToolTip>
            </Rectangle.ToolTip>
          </Rectangle>
        </StackPanel>
      </Button>
      <Button Click="GitHub_Button_Click">
        <StackPanel Orientation="Horizontal">
          <Rectangle Width="20"
                     Height="20">
            <Rectangle.Resources>
              <SolidColorBrush x:Key="BlackBrush"
                               Color="White" />
            </Rectangle.Resources>
            <Rectangle.Fill>
              <VisualBrush Stretch="Fill"
                           Visual="{StaticResource appbar_github}" />
            </Rectangle.Fill>
            <Rectangle.ToolTip>
              <ToolTip>
                <TextBlock Text="MONI bei GitHub"></TextBlock>
              </ToolTip>
            </Rectangle.ToolTip>
          </Rectangle>
        </StackPanel>
      </Button>
      <Button Click="ShowPNSearch_Button_Click">
        <StackPanel Orientation="Horizontal">
          <Rectangle Width="15"
                     Height="20">
            <Rectangle.Resources>
              <SolidColorBrush x:Key="BlackBrush"
                               Color="White" />
            </Rectangle.Resources>
            <Rectangle.Fill>
              <VisualBrush Stretch="Fill"
                           Visual="{StaticResource appbar_page_search}" />
            </Rectangle.Fill>
            <Rectangle.ToolTip>
              <ToolTip>
                <TextBlock Text="Projektnummern-Suche"></TextBlock>
              </ToolTip>
            </Rectangle.ToolTip>
          </Rectangle>
        </StackPanel>
      </Button>
      <Button Click="EditPreferences_Button_Click">
        <StackPanel Orientation="Horizontal">
          <Rectangle Width="20"
                     Height="20">
            <Rectangle.Resources>
              <SolidColorBrush x:Key="BlackBrush"
                               Color="White" />
            </Rectangle.Resources>
            <Rectangle.Fill>
              <VisualBrush Stretch="Fill"
                           Visual="{StaticResource appbar_settings}" />
            </Rectangle.Fill>
            <Rectangle.ToolTip>
              <ToolTip>
                <TextBlock Text="Einstellungen"></TextBlock>
              </ToolTip>
            </Rectangle.ToolTip>
          </Rectangle>
        </StackPanel>
      </Button>
    </Controls:WindowCommands>
  </Controls:MetroWindow.WindowCommands>

  <!-- *** flyouts ***************************************************************** -->
  <Controls:MetroWindow.Flyouts>

    <!-- settings -->
    <Controls:Flyout Header="Settings"
                     Position="Right"
                     Background="#333333"
                     KeyboardNavigation.TabNavigation="Cycle"
                     Content="{Binding ElementName=mv, Path=ViewModel.EditPreferences}"
                     IsOpen="{Binding ElementName=mv, Path=ViewModel.EditPreferences, Converter={StaticResource null2FalseConverter}}">
      <Controls:Flyout.ContentTemplate>
        <DataTemplate DataType="{x:Type data:MoniSettings}">
          <DataTemplate.Resources>
            <Style TargetType="{x:Type TextBox}"
                   BasedOn="{StaticResource MONIMetroFlyoutTextBox}">
            </Style>
            <Style TargetType="{x:Type CheckBox}"
                   BasedOn="{StaticResource MetroCheckBox}">
              <Setter Property="FocusVisualStyle"
                      Value="{StaticResource FlyoutFocusVisual}" />
            </Style>
            <Style TargetType="{x:Type Button}"
                   BasedOn="{StaticResource MetroFlyoutFlatButton}" />
          </DataTemplate.Resources>

          <Grid Width="400"
                Margin="10">

            <Grid.RowDefinitions>
              <RowDefinition Height="Auto"></RowDefinition>
              <RowDefinition Height="Auto"></RowDefinition>
              <RowDefinition Height="Auto"></RowDefinition>
              <RowDefinition Height="Auto"></RowDefinition>
              <RowDefinition Height="Auto"></RowDefinition>
              <RowDefinition Height="Auto"></RowDefinition>
              <RowDefinition Height="Auto"></RowDefinition>
              <RowDefinition Height="Auto"></RowDefinition>
              <RowDefinition Height="Auto"></RowDefinition>
              <RowDefinition Height="*"></RowDefinition>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="Auto"></ColumnDefinition>
              <ColumnDefinition></ColumnDefinition>
            </Grid.ColumnDefinitions>

            <Label Grid.Column="0"
                   Grid.Row="0">Daten-Verzeichnis</Label>
            <TextBox Grid.Column="1"
                     Grid.Row="0"
                     Margin="2"
                     Text="{Binding MainSettings.DataDirectory, UpdateSourceTrigger=PropertyChanged}"></TextBox>

            <Label Grid.Column="0"
                   Grid.Row="1">projekte.txt-Pfad</Label>
            <TextBox Grid.Column="1"
                     Grid.Row="1"
                     Margin="2"
                     Text="{Binding MainSettings.ProjectNumberFilePath, UpdateSourceTrigger=PropertyChanged}"></TextBox>
            
            <Label Grid.Column="0"
                   Grid.Row="2">Monlist.exe-Pfad</Label>
            <TextBox Grid.Column="1"
                     Grid.Row="2"
                     Margin="2"
                     Text="{Binding MainSettings.MonlistExecutablePath, UpdateSourceTrigger=PropertyChanged}"></TextBox>
            
            <Label Grid.Column="0"
                   Grid.Row="3">Mitarbeiternummer</Label>
            <TextBox Grid.Column="1"
                     Grid.Row="3"
                     Margin="2"
                     Text="{Binding MainSettings.MonlistEmployeeNumber, UpdateSourceTrigger=PropertyChanged}"></TextBox>

            <Label Grid.Column="0"
                   Grid.Row="4">Project-Hitliste anzeigen</Label>
            <CheckBox Grid.Column="1"
                      Grid.Row="4"
                      Margin="2"
                      VerticalAlignment="Center"
                      IsChecked="{Binding MainSettings.ShowProjectHitList, UpdateSourceTrigger=PropertyChanged}"></CheckBox>

            <Label Grid.Column="0"
                   Grid.Row="5">Stunden pro Tag [h]</Label>
            <TextBox Grid.Column="1"
                     Grid.Row="5"
                     Margin="2"
                     Text="{Binding MainSettings.HoursPerDay, UpdateSourceTrigger=PropertyChanged}"></TextBox>

            <!-- auto break -->
            <Label Grid.Column="0"
                   Grid.Row="6">Automatische Pause einfügen</Label>
            <CheckBox Grid.Column="1"
                      Grid.Row="6"
                      Margin="2"
                      VerticalAlignment="Center"
                      x:Name="autoPause"
                      IsChecked="{Binding ParserSettings.InsertDayBreak, UpdateSourceTrigger=PropertyChanged}"></CheckBox>

            <Label Grid.Column="0"
                   Grid.Row="7"
                   IsEnabled="{Binding IsChecked, ElementName=autoPause, Mode=OneWay}">Uhrzeit [hh:mm]</Label>
            <TextBox Grid.Column="1"
                     Grid.Row="7"
                     Margin="2"
                     IsEnabled="{Binding IsChecked, ElementName=autoPause, Mode=OneWay}"
                     Text="{Binding ParserSettings.DayBreakTime, Converter={StaticResource timeItemConverter}}"></TextBox>

            <Label Grid.Column="0"
                   Grid.Row="8"
                   IsEnabled="{Binding IsChecked, ElementName=autoPause, Mode=OneWay}">Dauer [min]</Label>
            <TextBox Grid.Column="1"
                     Grid.Row="8"
                     Margin="2"
                     IsEnabled="{Binding IsChecked, ElementName=autoPause, Mode=OneWay}"
                     Text="{Binding ParserSettings.DayBreakDurationInMinutes, UpdateSourceTrigger=PropertyChanged}"></TextBox>

            <UniformGrid Grid.Column="0"
                         Grid.Row="9"
                         Grid.ColumnSpan="2"
                         VerticalAlignment="Bottom"
                         Columns="2">
              <Button Click="EditPreferencesCancel_OnClick">Abbrechen</Button>
              <Button Click="EditPreferencesSave_OnClick" IsDefault="True">Speichern</Button>
            </UniformGrid>

          </Grid>
        </DataTemplate>
      </Controls:Flyout.ContentTemplate>
    </Controls:Flyout>

    <!-- edit / new shortcut -->
    <Controls:Flyout Header="Shortcut"
                     Position="Right"
                     Background="#333333"
                     KeyboardNavigation.TabNavigation="Cycle"
                     Content="{Binding ElementName=mv, Path=ViewModel.EditShortCut}"
                     IsOpen="{Binding ElementName=mv, Path=ViewModel.EditShortCut, Converter={StaticResource null2FalseConverter}}">
      <Controls:Flyout.ContentTemplate>
        <DataTemplate DataType="{x:Type viewModels:ShortcutViewModel}">
          <DataTemplate.Resources>
            <Style TargetType="{x:Type TextBox}"
                   BasedOn="{StaticResource MONIMetroFlyoutTextBox}">
            </Style>
            <Style TargetType="{x:Type CheckBox}"
                   BasedOn="{StaticResource MetroCheckBox}">
              <Setter Property="FocusVisualStyle"
                      Value="{StaticResource FlyoutFocusVisual}" />
            </Style>
            <Style TargetType="{x:Type Button}"
                   BasedOn="{StaticResource MetroFlyoutFlatButton}" />
          </DataTemplate.Resources>
          <!-- bind to IsOpen to set the focus to first editable textbox, not the best, but it works -->
          <views:ShortcutView x:Name="shortcutView"
                              IsOpen="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Controls:Flyout}}, Path=IsOpen}" />
        </DataTemplate>
      </Controls:Flyout.ContentTemplate>
    </Controls:Flyout>
    
    <!-- search projectnumbers -->
    <Controls:Flyout Header="Projektnummern-Suche"
                     Position="Right"
                     Background="#333333"
                     KeyboardNavigation.TabNavigation="Cycle"
                     Content="{Binding ElementName=mv, Path=ViewModel.PNSearch}"
                     IsOpen="{Binding ElementName=mv, Path=ViewModel.PNSearch.ShowPNSearch}">
      <Controls:Flyout.ContentTemplate>
        <DataTemplate DataType="{x:Type viewModels:PNSearchViewModel}">
          <DataTemplate.Resources>
            <Style TargetType="{x:Type TextBox}"
                   BasedOn="{StaticResource MONIMetroFlyoutTextBox}">
            </Style>
            <Style TargetType="{x:Type Button}"
                   BasedOn="{StaticResource MetroFlyoutFlatButton}" />
          </DataTemplate.Resources>
          <!-- bind to IsOpen to set the focus to first editable textbox, not the best, but it works -->
          <views:PNSearchView x:Name="pnSearchView"
                              IsOpen="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Controls:Flyout}}, Path=IsOpen}"
                              AddShortCutService="{Binding ElementName=mv}"/>
        </DataTemplate>
      </Controls:Flyout.ContentTemplate>
    </Controls:Flyout>    
    
    <!-- show update info -->
    <Controls:Flyout Header="Update-Info"
                     Position="Right"
                     Background="#333333"
                     KeyboardNavigation.TabNavigation="Cycle"
                     Content="{Binding ElementName=mv, Path=ViewModel.UpdateInfoViewModel}"
                     IsOpen="{Binding ElementName=mv, Path=ViewModel.UpdateInfoViewModel.ShowUpdateInfo}">
      <Controls:Flyout.ContentTemplate>
        <DataTemplate DataType="{x:Type viewModels:UpdateInfoViewModel}">
          <DataTemplate.Resources>
            <Style TargetType="{x:Type TextBox}"
                   BasedOn="{StaticResource MONIMetroFlyoutTextBox}">
            </Style>
            <Style TargetType="{x:Type Button}"
                   BasedOn="{StaticResource MetroFlyoutFlatButton}" />
          </DataTemplate.Resources>
          <views:UpdateInfoView />
        </DataTemplate>
      </Controls:Flyout.ContentTemplate>
    </Controls:Flyout>

  </Controls:MetroWindow.Flyouts>

  <!-- *** layout root ***************************************************************** -->
  <Grid RenderOptions.ClearTypeHint="Enabled"
        TextOptions.TextFormattingMode="Display">
    <Grid Margin="0 0 2 0">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="4*" />
        <ColumnDefinition Width="2*" />
        <ColumnDefinition Width="Auto" />
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <RowDefinition Height="50" />
        <RowDefinition Height="*" />
        <RowDefinition Height="Auto" />
      </Grid.RowDefinitions>

      <!-- infos and week change buttons-->
      <Grid Grid.Column="0"
            Grid.Row="0">

        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="50" />
          <ColumnDefinition Width="Auto" />
          <ColumnDefinition Width="*" />
          <ColumnDefinition Width="61" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
          <RowDefinition Height="*" />
          <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <Button Grid.Column="0"
                Grid.Row="0"
                Grid.RowSpan="2"
                x:Name="btnPrev"
                Background="#537DBBDA"
                Margin="0 3 0 2"
                Command="{Binding ElementName=mv, Path=ViewModel.PreviousWeekCommand}">
          <Rectangle Width="15"
                     Height="15">
            <Rectangle.Resources>
              <SolidColorBrush x:Key="BlackBrush"
                               Color="#CC119EDA" />
            </Rectangle.Resources>
            <Rectangle.Fill>
              <VisualBrush Stretch="Fill"
                           Visual="{StaticResource appbar_arrow_left}" />
            </Rectangle.Fill>
          </Rectangle>
        </Button>

        <TextBlock Grid.Column="1"
                   Grid.Row="0"
                   HorizontalAlignment="Center"
                   FontWeight="Bold"
                   VerticalAlignment="Bottom"
                   Foreground="#CC119EDA"
                   FontSize="20"
                   Text="{Binding ElementName=mv, Path=ViewModel.WorkYear.Year}" />

        <StackPanel Grid.Column="2"
                    Grid.Row="0"
                    Orientation="Horizontal"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Bottom">
          <TextBlock HorizontalAlignment="Center"
                     FontWeight="Bold"
                     VerticalAlignment="Bottom"
                     Foreground="#CC7DBEDA"
                     Margin="2 0 5 2"
                     Text="{Binding ElementName=mv, Path=ViewModel.WorkWeek.HoursDuration, StringFormat='{}{0:f} h'}">
            <TextBlock.ToolTip>
              <ToolTip>Wochenstundenzahl</ToolTip>
            </TextBlock.ToolTip>
          </TextBlock>
          <TextBlock HorizontalAlignment="Center"
                     FontWeight="Bold"
                     VerticalAlignment="Bottom"
                     Foreground="#CC119EDA"
                     FontSize="20"
                     Text="{Binding ElementName=mv, Path=ViewModel.WorkWeek.WeekOfYear, StringFormat='{}KW: {0}'}">
            <TextBlock.ToolTip>
              <ToolTip>Kalenderwoche</ToolTip>
            </TextBlock.ToolTip>
          </TextBlock>
        </StackPanel>

        <StackPanel Grid.Column="2"
                    Grid.Row="1"
                    Orientation="Horizontal"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Bottom">
          <TextBlock FontWeight="Bold"
                     VerticalAlignment="Bottom"
                     Foreground="#CC7DBEDA"
                     Margin="2 0 5 2"
                     Text="{Binding ElementName=mv, Path=ViewModel.WorkWeek.Month.HoursDuration, StringFormat='{}{0:f} h'}">
            <TextBlock.ToolTip>
              <ToolTip>Ist-Stunden Monat</ToolTip>
            </TextBlock.ToolTip>
          </TextBlock>
          <TextBlock FontWeight="Bold"
                     VerticalAlignment="Bottom"
                     Margin="2 0 5 2"
                     Text="{Binding ElementName=mv, Path=ViewModel.WorkWeek.Month.PreviewHours, StringFormat='{}({0:f} h'}">
            <TextBlock.ToolTip>
              <ToolTip>Prognose-Stunden Monat</ToolTip>
            </TextBlock.ToolTip>

            <TextBlock.Foreground>
              <MultiBinding Converter="{StaticResource lessThanColorConverter}">
                <MultiBinding.Bindings>
                  <Binding Path="ViewModel.WorkWeek.Month.NecessaryHours"
                           ElementName="mv"
                           Mode="OneWay" />
                  <Binding Path="ViewModel.WorkWeek.Month.PreviewHours"
                           ElementName="mv"
                           Mode="OneWay" />
                </MultiBinding.Bindings>
              </MultiBinding>
            </TextBlock.Foreground>
          </TextBlock>
          <TextBlock FontWeight="Bold"
                     VerticalAlignment="Bottom"
                     Foreground="#CC7DBEDA"
                     Margin="2 0 5 2"
                     Text="von"></TextBlock>
          <TextBlock FontWeight="Bold"
                     VerticalAlignment="Bottom"
                     Foreground="#CC7DBEDA"
                     Margin="2 0 5 2"
                     Text="{Binding ElementName=mv, Path=ViewModel.WorkWeek.Month.NecessaryHours, StringFormat='{}{0:f} h)'}">
            <TextBlock.ToolTip>
              <ToolTip>Soll-Stunden Monat</ToolTip>
            </TextBlock.ToolTip>

          </TextBlock>
          <TextBlock FontWeight="Bold"
                     VerticalAlignment="Bottom"
                     FontSize="20"
                     Foreground="#CC119EDA"
                     Text="{Binding ElementName=mv, Path=ViewModel.WorkWeek.Month.MonthName}"></TextBlock>
        </StackPanel>

        <Button Grid.Column="3"
                Grid.Row="0"
                Grid.RowSpan="2"
                x:Name="btnNext"
                Background="#537DBBDA"
                Margin="0 3 11 2"
                Command="{Binding ElementName=mv, Path=ViewModel.NextWeekCommand}">
          <Rectangle Width="15"
                     Height="15">
            <Rectangle.Resources>
              <SolidColorBrush x:Key="BlackBrush"
                               Color="#CC119EDA" />
            </Rectangle.Resources>
            <Rectangle.Fill>
              <VisualBrush Stretch="Fill"
                           Visual="{StaticResource appbar_arrow_right}" />
            </Rectangle.Fill>
          </Rectangle>
        </Button>

      </Grid>

      <!-- week view -->
      <ScrollViewer Grid.Row="1"
                    Grid.Column="0">
        <!-- days -->
        <ItemsControl ItemsSource="{Binding ElementName=mv, Path=ViewModel.WorkWeek.Days}"
                      Grid.IsSharedSizeScope="True">
          <ItemsControl.ItemTemplate>
            <!-- this is a day -->
            <DataTemplate>
              <Border BorderThickness="1"
                      Background="{Binding DayType, Converter={StaticResource dayTypeColorConverter}}"
                      Margin="1"
                      Padding="1"
                      SnapsToDevicePixels="True">
                <Grid>
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"
                                      SharedSizeGroup="Labels"></ColumnDefinition>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                  </Grid.ColumnDefinitions>
                  <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"></RowDefinition>
                    <RowDefinition Height="Auto"></RowDefinition>
                    <RowDefinition Height="Auto"></RowDefinition>
                    <RowDefinition Height="Auto"></RowDefinition>
                    <RowDefinition Height="*"></RowDefinition>
                  </Grid.RowDefinitions>

                  <TextBlock Grid.Column="0"
                             Grid.Row="0"
                             Margin="0 4 0 0"
                             Text="{Binding DayOfWeek, Converter={StaticResource dayNameConverter}}"
                             Foreground="{StaticResource lightText}"
                             HorizontalAlignment="Center"></TextBlock>
                  <TextBlock Grid.Column="0"
                             Grid.Row="1"
                             Text="{Binding SpecialDay.Name}"
                             Foreground="{StaticResource lightText}"
                             FontWeight="Bold"
                             Visibility="{Binding SpecialDay, Converter={StaticResource null2CollapsedConverter}}"
                             HorizontalAlignment="Center"></TextBlock>
                  <TextBlock Grid.Column="0"
                             Grid.Row="2"
                             Text="{Binding Day}"
                             FontWeight="Bold"
                             HorizontalAlignment="Center"></TextBlock>
                  <TextBlock Grid.Column="0"
                             Grid.Row="3"
                             Text="{Binding HoursDuration, StringFormat='{}{0:f} h'}"
                             FontWeight="Bold"
                             Padding="3 0 3 0"
                             Foreground="{Binding HoursDuration, Converter={StaticResource durationFgConverter}}"
                             Background="{Binding HoursDuration, Converter={StaticResource durationBgConverter}}"
                             HorizontalAlignment="Center"></TextBlock>

                  <TextBox Loaded="TextBox_Loaded"
                           GotKeyboardFocus="WorkDayTextBox_OnGotKeyboardFocus"
                           PreviewKeyDown="WorkDayTextBox_OnKeyDown"
                           Grid.Column="1"
                           Grid.Row="0"
                           Grid.RowSpan="3"
                           Margin="3,2,2,2"
                           Tag="{Binding}"
                           AcceptsReturn="True"
                           Text="{Binding OriginalString, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"></TextBox>

                  <!-- day items -->
                  <ItemsControl Grid.Column="1"
                                Grid.Row="3"
                                Grid.RowSpan="2"
                                Margin="3,0,2,2"
                                ItemsSource="{Binding Items}"
                                IsTabStop="False"
                                Grid.IsSharedSizeScope="True">
                    <ItemsControl.ItemTemplate>
                      <DataTemplate>
                        <Grid>
                          <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"
                                              SharedSizeGroup="1" />
                            <ColumnDefinition Width="Auto"
                                              SharedSizeGroup="2" />
                            <ColumnDefinition Width="Auto"
                                              SharedSizeGroup="3" />
                            <ColumnDefinition Width="Auto"
                                              SharedSizeGroup="4" />
                            <ColumnDefinition Width="Auto"
                                              SharedSizeGroup="5" />
                            <ColumnDefinition Width="Auto"
                                              SharedSizeGroup="6" />
                            <ColumnDefinition Width="Auto"
                                              SharedSizeGroup="7" />
                            <ColumnDefinition Width="Auto"
                                              SharedSizeGroup="8" />
                            <ColumnDefinition Width="Auto"
                                              SharedSizeGroup="9" />
                            <ColumnDefinition Width="Auto"
                                              SharedSizeGroup="10" />
                          </Grid.ColumnDefinitions>
                          <TextBlock Grid.Column="0"
                                     TextAlignment="Right"
                                     Text="{Binding Start}"
                                     FontWeight="Bold" />
                          <TextBlock Grid.Column="1"
                                     Text=" => "
                                     Foreground="{StaticResource lightText}" />
                          <TextBlock Grid.Column="2"
                                     TextAlignment="Right"
                                     Text="{Binding End}"
                                     FontWeight="Bold" />
                          <TextBlock Grid.Column="3"
                                     TextAlignment="Right"
                                     Foreground="DarkSlateGray"
                                     Text="{Binding HoursDuration, StringFormat='{} ({0:f} h)'}" />
                          <TextBlock Grid.Column="4"
                                     Text=" : "
                                     Foreground="{StaticResource lightText}" />
                          <TextBlock Grid.Column="5"
                                     Text="{Binding Project}"
                                     FontWeight="Bold" />
                          <TextBlock Grid.Column="6"
                                     Text="-"
                                     Foreground="{StaticResource lightText}" />
                          <TextBlock Grid.Column="7"
                                     Text="{Binding Position}"
                                     FontWeight="Bold" />
                          <TextBlock Grid.Column="8"
                                     Text="=>"
                                     Foreground="{StaticResource lightText}" />
                          <TextBlock Grid.Column="9"
                                     Text="{Binding Description}"
                                     Foreground="{StaticResource lightText}" />
                        </Grid>
                      </DataTemplate>
                    </ItemsControl.ItemTemplate>
                  </ItemsControl>
                </Grid>
              </Border>
            </DataTemplate>
          </ItemsControl.ItemTemplate>
        </ItemsControl>
      </ScrollViewer>

      <!-- shortcuts -->
      <StackPanel Grid.Column="1"
                  Grid.Row="0"
                  HorizontalAlignment="Right"
                  VerticalAlignment="Bottom"
                  Orientation="Horizontal">
        <TextBlock FontSize="20"
                   Foreground="#CC119EDA"
                   FontWeight="Bold">Shortcuts</TextBlock>
        <Button Width="13"
                Height="20"
                Margin="10 0 0 0"
                Style="{StaticResource ImageButtonStyle}"
                Click="AddShortcut_OnClick">
          <Button.ToolTip>
            <ToolTip>
              <TextBlock Text="Neuen Shortcut erstellen"
                         Foreground="White"></TextBlock>
            </ToolTip>
          </Button.ToolTip>
          <Rectangle Width="10"
                     Height="20">
            <Rectangle.Resources>
              <SolidColorBrush x:Key="BlackBrush"
                               Color="#CC119EDA" />
            </Rectangle.Resources>
            <Rectangle.Fill>
              <VisualBrush Stretch="Fill"
                           Visual="{StaticResource appbar_location_add}" />
            </Rectangle.Fill>
          </Rectangle>
        </Button>
      </StackPanel>
      <ScrollViewer Grid.Row="1"
                    Grid.Column="1">
        <ItemsControl Margin="0 1 0 0"
                      ItemsSource="{Binding ElementName=mv, Path=ViewModel.WorkWeek.Month.ShortCutStatistic}"
                      HorizontalContentAlignment="Stretch"
                      dd:DragDrop.IsDragSource="True"
                      dd:DragDrop.IsDropTarget="True"
                      dd:DragDrop.DropHandler="{Binding ElementName=mv, Path=ViewModel}"
                      Grid.IsSharedSizeScope="True">
          <ItemsControl.ItemTemplate>
            <!-- shortcut -->
            <DataTemplate>
              <!-- use transparent background for correct highlighting -->
              <Grid Background="Transparent">

                <Border BorderThickness="1"
                        BorderBrush="#FFF3EDED"
                        Background="#FFF3EDED"
                        Margin="1"
                        Padding="1 1 1 4"
                        SnapsToDevicePixels="True">
                  <Grid>
                    <Grid>
                      <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"
                                          SharedSizeGroup="0"></ColumnDefinition>
                        <ColumnDefinition Width="Auto"
                                          SharedSizeGroup="1"></ColumnDefinition>
                        <ColumnDefinition Width="Auto"
                                          SharedSizeGroup="2"></ColumnDefinition>
                        <ColumnDefinition Width="Auto"
                                          SharedSizeGroup="3"></ColumnDefinition>
                      </Grid.ColumnDefinitions>

                      <TextBlock Grid.Column="0"
                                 VerticalAlignment="Bottom"
                                 Text="{Binding Key}"
                                 FontWeight="Bold"
                                 FontSize="14" />
                      <TextBlock Grid.Column="1"
                                 VerticalAlignment="Bottom"
                                 Text="{Binding Value.Expansion}"
                                 Foreground="DarkSlateGray"
                                 FontSize="10"
                                 TextTrimming="CharacterEllipsis"
                                 Margin="10 0 0 0" />
                      <TextBlock Grid.Column="2"
                                 VerticalAlignment="Bottom"
                                 HorizontalAlignment="Right"
                                 Text="{Binding Value.UsedInMonth, StringFormat='{} {0:##}'}"
                                 Foreground="Gray"
                                 FontWeight="Bold"
                                 FontSize="14"
                                 Margin="10 0 3 0" />

                      <!--wholeday expansion info-->
                      <Rectangle Grid.Column="3"
                                 VerticalAlignment="Top"
                                 HorizontalAlignment="Right"
                                 Width="8"
                                 Height="15"
                                 Margin="0 -2 0 0"
                                 Visibility="{Binding Value.WholeDayExpansion, Converter={StaticResource false2CollapsedConverter}}"
                                 Fill="{StaticResource ribbonIcon}">
                        <Rectangle.Resources>
                          <SolidColorBrush x:Key="BlackBrush"
                                           Color="#B10101" />
                        </Rectangle.Resources>
                        <Rectangle.ToolTip>
                          <ToolTip>
                            <TextBlock Text="Ersetzt ganzen Tag"></TextBlock>
                          </ToolTip>
                        </Rectangle.ToolTip>
                      </Rectangle>
                    </Grid>

                    <!--actions-->
                    <Border Background="Silver"
                            Margin="10 0"
                            Opacity="0">
                      <Border.Style>
                        <Style>
                          <Style.Triggers>
                            <EventTrigger RoutedEvent="Control.MouseEnter">
                              <BeginStoryboard>
                                <Storyboard>
                                  <DoubleAnimation Duration="0:0:0.3"
                                                   To="0.8"
                                                   Storyboard.TargetProperty="Opacity" />
                                </Storyboard>
                              </BeginStoryboard>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="Control.MouseLeave">
                              <BeginStoryboard>
                                <Storyboard>
                                  <DoubleAnimation Duration="0:0:0.3"
                                                   To="0"
                                                   Storyboard.TargetProperty="Opacity" />
                                </Storyboard>
                              </BeginStoryboard>
                            </EventTrigger>
                          </Style.Triggers>
                        </Style>
                      </Border.Style>
                      <StackPanel Orientation="Horizontal"
                                  HorizontalAlignment="Center">

                        <Button Background="Transparent"
                                Tag="{Binding Value}"
                                Style="{StaticResource ImageButtonStyle}"
                                Margin="10 0"
                                Click="RemoveShortcut_OnClick">
                          <Button.ToolTip>
                            <ToolTip>
                              <TextBlock Text="Shortcut löschen"></TextBlock>
                            </ToolTip>
                          </Button.ToolTip>
                          <Rectangle Width="8"
                                     Height="10"
                                     Fill="{StaticResource deleteIcon}">
                          </Rectangle>
                        </Button>

                        <Button Background="Transparent"
                                Tag="{Binding Value}"
                                Style="{StaticResource ImageButtonStyle}"
                                Margin="10 0"
                                Click="EditShortcut_OnClick">
                          <Button.ToolTip>
                            <ToolTip>
                              <TextBlock Text="Shortcut editieren"></TextBlock>
                            </ToolTip>
                          </Button.ToolTip>
                          <Rectangle Width="8"
                                     Height="10"
                                     Fill="{StaticResource editIcon}">
                          </Rectangle>
                        </Button>

                      </StackPanel>
                    </Border>
                  </Grid>
                </Border>

                <!-- usage history graph -->
                <ItemsControl ItemsSource="{Binding Value.UsageHistory}">
                  <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                      <UniformGrid Rows="1"
                                   Columns="31" />
                    </ItemsPanelTemplate>
                  </ItemsControl.ItemsPanel>
                  <ItemsControl.ItemTemplate>
                    <DataTemplate>
                      <Border Height="{Binding Hours, Converter={StaticResource scaleDoubleConverter}, ConverterParameter=2}"
                              Background="{Binding IsToday, Converter={StaticResource todayColorConverter}}"
                              VerticalAlignment="Bottom"
                              SnapsToDevicePixels="True"
                              Opacity="0.5"
                              IsHitTestVisible="False"
                              Margin="1">
                        <!-- sloooooooooooooooooooooow -->
                        <!--<Border.ToolTip>
                          <ToolTip>
                            <TextBlock Text="{Binding Hours, PresentationTraceSources.TraceLevel=High}"></TextBlock>
                          </ToolTip>
                        </Border.ToolTip>-->
                      </Border>
                    </DataTemplate>
                  </ItemsControl.ItemTemplate>
                </ItemsControl>
              </Grid>
            </DataTemplate>
          </ItemsControl.ItemTemplate>
        </ItemsControl>
      </ScrollViewer>

      <TextBlock Grid.Column="2"
                 Grid.Row="0"
                 HorizontalAlignment="Right"
                 VerticalAlignment="Bottom"
                 FontSize="20"
                 Foreground="#CC119EDA"
                 FontWeight="Bold"
                 Visibility="{Binding ElementName=mv, Path=ViewModel.ProjectListVisibility}">Project-Hitlist</TextBlock>
      <ScrollViewer Grid.Column="2"
                    Grid.Row="1"
                    Visibility="{Binding ElementName=mv, Path=ViewModel.ProjectListVisibility}">
        <ItemsControl Margin="0 1 0 0"
                      ItemsSource="{Binding ElementName=mv, Path=ViewModel.WorkYear.ProjectHitlist}"
                      HorizontalContentAlignment="Stretch">
          <ItemsControl.ItemTemplate>
            <!-- shortcut -->
            <DataTemplate>
              <Border BorderThickness="1"
                      BorderBrush="#FFF3EDED"
                      Background="#FFF3EDED"
                      Margin="1"
                      Padding="1"
                      SnapsToDevicePixels="True">
                <Grid>
                  <Grid.RowDefinitions>
                    <RowDefinition Height="2*"></RowDefinition>
                    <RowDefinition Height="*"></RowDefinition>
                  </Grid.RowDefinitions>
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                    <ColumnDefinition Width="Auto"></ColumnDefinition>
                  </Grid.ColumnDefinitions>
                  <TextBlock Grid.Row="0"
                             Text="{Binding Key}"
                             FontWeight="Bold"
                             FontSize="14" />
                  <TextBlock Grid.Row="1"
                             Text="{Binding LastUsedDescription}"
                             Foreground="Gray"
                             FontSize="10"
                             Margin="10 0 0 0" />
                  <TextBlock Grid.Column="1"
                             Grid.RowSpan="2"
                             VerticalAlignment="Center"
                             Text="{Binding Count}"
                             Foreground="Gray"
                             FontWeight="Bold"
                             FontSize="20"
                             Margin="10 0 0 0" />
                </Grid>
              </Border>
            </DataTemplate>
          </ItemsControl.ItemTemplate>
        </ItemsControl>
      </ScrollViewer>
    </Grid>

    <!-- get user password -->
    <Grid Visibility="{Binding ElementName=mv, Path=ViewModel.ShowPasswordDialog, Converter={StaticResource false2CollapsedConverter}}">
      <Border Background="SkyBlue"
              Opacity="0.7" />
      <TextBlock FontSize="80"
                 FontWeight="Bold"
                 HorizontalAlignment="Center"
                 VerticalAlignment="Center"
                 Foreground="#2CB4EB"
                 Margin="0 0 300 200">passwort bitte</TextBlock>
      <Border Background="White"
              Width="400"
              Height="150">
        <Grid VerticalAlignment="Center">
          <Grid.RowDefinitions>
            <RowDefinition Height="Auto"></RowDefinition>
            <RowDefinition Height="Auto"></RowDefinition>
            <RowDefinition Height="Auto"></RowDefinition>
            <RowDefinition Height="Auto"></RowDefinition>
          </Grid.RowDefinitions>
          <Grid.ColumnDefinitions>
            <ColumnDefinition></ColumnDefinition>
            <ColumnDefinition></ColumnDefinition>
          </Grid.ColumnDefinitions>
          <Label Grid.Column="0"
                 Grid.Row="0">Passwort</Label>
          <PasswordBox Grid.Column="1"
                   Grid.Row="0"
                   Margin="2"
                   x:Name="passwordBox"></PasswordBox>

          <Button Grid.Column="0"
                  Grid.Row="3"
                  Click="PasswordCancel_OnClick">Abbrechen</Button>
          <Button Grid.Column="1"
                  Grid.Row="3"
                  Click="PasswordOK_OnClick"
                  IsDefault="True">OK</Button>
        </Grid>
      </Border>
    </Grid>

  </Grid>
</Controls:MetroWindow>