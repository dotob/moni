<Application x:Class="MONI.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:converter="clr-namespace:MahApps.Metro.IconPacks.Converter;assembly=MahApps.Metro.IconPacks.Core"
             xmlns:converters="http://metro.mahapps.com/winfx/xaml/shared"
             xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
             xmlns:valueConverter="clr-namespace:MONI.ValueConverter"
             StartupUri="Views\MainView.xaml">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Colors.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/Blue.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/BaseLight.xaml" />

                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/FlatButton.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MONI;component/Resources/Controls.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MONI;component/Resources/Markdown.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <converters:ToUpperConverter x:Key="ToUpperConverter" />

            <valueConverter:VisibilityConverter x:Key="null2CollapsedConverter" />
            <valueConverter:VisibilityConverter x:Key="false2CollapsedConverter" />
            <valueConverter:VisibilityConverter x:Key="false2HiddenConverter" NotVisibleValue="Hidden" />

            <SolidColorBrush x:Key="lightText" Color="DarkSlateGray" />

            <Style x:Key="ImageButtonStyle" TargetType="{x:Type Button}">
                <Setter Property="OverridesDefaultStyle" Value="true" />
                <Setter Property="Padding" Value="0" />
                <Setter Property="SnapsToDevicePixels" Value="true" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border x:Name="Border">
                                <ContentPresenter Margin="{TemplateBinding Padding}"
                                                  HorizontalAlignment="Center"
                                                  VerticalAlignment="Center"
                                                  RecognizesAccessKey="True" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsKeyboardFocused" Value="true">
                                    <Setter TargetName="Border" Property="BorderBrush" Value="#202020" />
                                </Trigger>
                                <Trigger Property="IsPressed" Value="true">
                                    <Setter TargetName="Border" Property="Background" Value="#E0E0E0" />
                                    <Setter TargetName="Border" Property="BorderBrush" Value="#606060" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <LinearGradientBrush x:Key="NormalBrush" StartPoint="0,0" EndPoint="0,1">
                <GradientBrush.GradientStops>
                    <GradientStopCollection>
                        <GradientStop Offset="0.0" Color="#FFF" />
                        <GradientStop Offset="1.0" Color="#CCC" />
                    </GradientStopCollection>
                </GradientBrush.GradientStops>
            </LinearGradientBrush>

            <LinearGradientBrush x:Key="HorizontalNormalBrush" StartPoint="0,0" EndPoint="1,0">
                <GradientBrush.GradientStops>
                    <GradientStopCollection>
                        <GradientStop Offset="0.0" Color="#FFF" />
                        <GradientStop Offset="1.0" Color="#CCC" />
                    </GradientStopCollection>
                </GradientBrush.GradientStops>
            </LinearGradientBrush>

            <LinearGradientBrush x:Key="NormalBorderBrush" StartPoint="0,0" EndPoint="0,1">
                <GradientBrush.GradientStops>
                    <GradientStopCollection>
                        <GradientStop Offset="0.0" Color="#CCC" />
                        <GradientStop Offset="1.0" Color="#444" />
                    </GradientStopCollection>
                </GradientBrush.GradientStops>
            </LinearGradientBrush>

            <LinearGradientBrush x:Key="HorizontalNormalBorderBrush" StartPoint="0,0" EndPoint="1,0">
                <GradientBrush.GradientStops>
                    <GradientStopCollection>
                        <GradientStop Offset="0.0" Color="#CCC" />
                        <GradientStop Offset="1.0" Color="#444" />
                    </GradientStopCollection>
                </GradientBrush.GradientStops>
            </LinearGradientBrush>

            <Style x:Key="ScrollBarLineButton" TargetType="{x:Type RepeatButton}">
                <Setter Property="Focusable" Value="False" />
                <Setter Property="OverridesDefaultStyle" Value="True" />
                <Setter Property="SnapsToDevicePixels" Value="True" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                            <Path Name="BorderRepeatButton"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"
                                  Data="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}}"
                                  Fill="Gray" />

                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="BorderRepeatButton" Property="Fill" Value="#FFE2E2E2" />
                                </Trigger>
                            </ControlTemplate.Triggers>

                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!--  RepeatButton im inneren der ScrollBar (nicht Sichtbar)  -->
            <Style x:Key="ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
                <Setter Property="Focusable" Value="False" />
                <Setter Property="IsTabStop" Value="False" />
                <Setter Property="OverridesDefaultStyle" Value="True" />
                <Setter Property="SnapsToDevicePixels" Value="True" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                            <Border Background="Transparent" />

                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
                <Setter Property="Focusable" Value="False" />
                <Setter Property="IsTabStop" Value="False" />
                <Setter Property="OverridesDefaultStyle" Value="True" />
                <Setter Property="SnapsToDevicePixels" Value="True" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Thumb}">
                            <Border x:Name="BorderThumb"
                                    Background="Gray"
                                    CornerRadius="2" />
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="BorderThumb" Property="Background" Value="#FFE2E2E2" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>

                </Setter>

            </Style>

            <ControlTemplate x:Key="VerticalScrollBar" TargetType="{x:Type ScrollBar}">
                <Grid Background="Transparent">
                    <Grid.RowDefinitions>
                        <RowDefinition MaxHeight="8" />
                        <RowDefinition Height="0.00001*" />
                        <RowDefinition MaxHeight="8" />
                    </Grid.RowDefinitions>

                    <RepeatButton Grid.Row="0"
                                  Height="8"
                                  Command="ScrollBar.LineUpCommand"
                                  Content="M 0 4 L 8 4 L 4 0 Z"
                                  Style="{StaticResource ScrollBarLineButton}" />
                    <Track Name="PART_Track"
                           Grid.Row="1"
                           IsDirectionReversed="True">
                        <Track.DecreaseRepeatButton>
                            <RepeatButton Command="ScrollBar.PageUpCommand" Style="{StaticResource ScrollBarPageButton}" />
                        </Track.DecreaseRepeatButton>
                        <Track.Thumb>
                            <Thumb Margin="1 0 1 0"
                                   Background="{StaticResource HorizontalNormalBrush}"
                                   BorderBrush="{StaticResource HorizontalNormalBorderBrush}"
                                   Style="{StaticResource ScrollBarThumb}" />
                        </Track.Thumb>
                        <Track.IncreaseRepeatButton>
                            <RepeatButton Command="ScrollBar.PageDownCommand" Style="{StaticResource ScrollBarPageButton}" />
                        </Track.IncreaseRepeatButton>
                    </Track>
                    <RepeatButton Grid.Row="2"
                                  Height="8"
                                  Command="ScrollBar.LineDownCommand"
                                  Content="M 0 0 L 4 4 L 8 0 Z"
                                  Style="{StaticResource ScrollBarLineButton}" />
                </Grid>
            </ControlTemplate>

            <ControlTemplate x:Key="HorizontalScrollBar" TargetType="{x:Type ScrollBar}">
                <Grid Background="Transparent">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition MaxWidth="8" />
                        <ColumnDefinition Width="0.00001*" />
                        <ColumnDefinition MaxWidth="8" />
                    </Grid.ColumnDefinitions>

                    <RepeatButton Grid.Column="0"
                                  Width="8"
                                  Command="ScrollBar.LineLeftCommand"
                                  Content="M0,4 L8,0 8,8 z"
                                  Style="{StaticResource ScrollBarLineButton}" />
                    <Track Name="PART_Track"
                           Grid.Column="1"
                           IsDirectionReversed="False">
                        <Track.DecreaseRepeatButton>
                            <RepeatButton Command="ScrollBar.PageLeftCommand" Style="{StaticResource ScrollBarPageButton}" />
                        </Track.DecreaseRepeatButton>
                        <Track.Thumb>
                            <Thumb Margin="0 1 0 1"
                                   Background="{StaticResource NormalBrush}"
                                   BorderBrush="{StaticResource NormalBorderBrush}"
                                   Style="{StaticResource ScrollBarThumb}" />
                        </Track.Thumb>
                        <Track.IncreaseRepeatButton>
                            <RepeatButton Command="ScrollBar.PageRightCommand" Style="{StaticResource ScrollBarPageButton}" />
                        </Track.IncreaseRepeatButton>
                    </Track>
                    <RepeatButton Grid.Column="2"
                                  Width="8"
                                  Command="ScrollBar.LineRightCommand"
                                  Content="M0,8 L0,0 8,4 z"
                                  Style="{StaticResource ScrollBarLineButton}" />
                </Grid>
            </ControlTemplate>

            <!--  ScrollBars Positionieren (HorizontalScrollBar und VerticalScrollBar)  -->
            <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
                <Setter Property="OverridesDefaultStyle" Value="True" />
                <Setter Property="SnapsToDevicePixels" Value="True" />
                <Style.Triggers>
                    <Trigger Property="Orientation" Value="Horizontal">
                        <Setter Property="Height" Value="8" />
                        <Setter Property="Template" Value="{StaticResource HorizontalScrollBar}" />
                        <Setter Property="Width" Value="Auto" />
                    </Trigger>
                    <Trigger Property="Orientation" Value="Vertical">
                        <Setter Property="Height" Value="Auto" />
                        <Setter Property="Template" Value="{StaticResource VerticalScrollBar}" />
                        <Setter Property="Width" Value="8" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style BasedOn="{StaticResource {x:Type iconPacks:PackIconModern}}" TargetType="{x:Type iconPacks:PackIconModern}">
                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type iconPacks:PackIconModern}">
                            <Grid>
                                <Border Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                <Grid x:Name="PART_InnerGrid"
                                      Margin="{TemplateBinding BorderThickness}"
                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                      RenderTransformOrigin="0.5 0.5">
                                    <Grid.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform x:Name="FlipTransform"
                                                            ScaleX="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Flip, Mode=OneWay, Converter={converter:FlipToScaleXValueConverter}}"
                                                            ScaleY="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Flip, Mode=OneWay, Converter={converter:FlipToScaleYValueConverter}}" />
                                            <RotateTransform x:Name="RotationTransform" Angle="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=RotationAngle, Mode=OneWay}" />
                                            <RotateTransform x:Name="SpinTransform" />
                                        </TransformGroup>
                                    </Grid.RenderTransform>
                                    <Viewbox Margin="{TemplateBinding Padding}">
                                        <Path Data="{Binding Data, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay, Converter={converter:NullToUnsetValueConverter}}"
                                              Fill="{TemplateBinding Foreground}"
                                              SnapsToDevicePixels="False"
                                              Stretch="Uniform"
                                              UseLayoutRounding="False" />
                                    </Viewbox>
                                </Grid>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="VerticalContentAlignment" Value="Stretch" />
            </Style>

        </ResourceDictionary>
    </Application.Resources>
</Application>
